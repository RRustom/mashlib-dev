{"version":3,"sources":["../../src/widgets/dragAndDrop.js"],"names":["mime","require","module","exports","makeDropTarget","makeDraggable","uploadFiles","ele","droppedURIHandler","droppedFileHandler","dragoverListener","e","preventDefault","dataTransfer","dropEffect","dragenterListener","debug","log","style","savedStyle","border","backgroundColor","borderRadius","dragleaveListener","dropListener","types","join","uris","text","t","length","type","getData","split","files","i","f","name","size","lastModifiedDate","toLocaleDateString","slice","addTargetListeners","addEventListener","tr","obj","setAttribute","fontWeight","setData","uri","outerHTML","stopPropagation","fetcher","fileBase","imageBase","successHandler","reader","FileReader","onload","theFile","data","target","result","suffix","byteLength","contentType","lookup","msg","alert","Error","extension","endsWith","folderName","startsWith","destURI","encodeURIComponent","webOperation","then","_response","error","readAsArrayBuffer"],"mappings":"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","sourcesContent":["/* Drag and drop common functionality\n */\nimport * as debug from '../debug'\n\nconst mime = require('mime-types')\n\n/* global FileReader alert */\nmodule.exports = {\n  makeDropTarget: makeDropTarget,\n  makeDraggable: makeDraggable,\n  uploadFiles: uploadFiles\n}\n// const UI = require('../index.js') // this package\n\nfunction makeDropTarget (ele, droppedURIHandler, droppedFileHandler) {\n  const dragoverListener = function (e) {\n    e.preventDefault() // Neeed else drop does not work [sic]\n    e.dataTransfer.dropEffect = 'copy'\n  }\n\n  const dragenterListener = function (e) {\n    debug.log('dragenter event dropEffect: ' + e.dataTransfer.dropEffect)\n    if (this.style) {\n      //  necessary not sure when\n      if (!this.savedStyle) {\n        this.savedStyle = {}\n        this.savedStyle.border = this.style.border\n        this.savedStyle.backgroundColor = this.style.backgroundColor\n        this.savedStyle.borderRadius = this.style.borderRadius\n      }\n      this.style.backgroundColor = '#ccc'\n      this.style.border = '0.25em dashed black'\n      this.style.borderRadius = '0.3em'\n    }\n\n    e.dataTransfer.dropEffect = 'link'\n    debug.log('dragenter event dropEffect 2: ' + e.dataTransfer.dropEffect)\n  }\n  const dragleaveListener = function (e) {\n    debug.log('dragleave event dropEffect: ' + e.dataTransfer.dropEffect)\n    if (this.savedStyle) {\n      this.style.border = this.savedStyle.border\n      this.style.backgroundColor = this.savedStyle.backgroundColor\n      this.style.borderRadius = this.savedStyle.borderRadius\n    } else {\n      this.style.backgroundColor = 'white'\n      this.style.border = '0em solid black'\n    }\n  }\n\n  const dropListener = function (e) {\n    if (e.preventDefault) e.preventDefault() // stops the browser from redirecting off to the text.\n    debug.log('Drop event. dropEffect: ' + e.dataTransfer.dropEffect)\n    debug.log(\n      'Drop event. types: ' +\n        (e.dataTransfer.types ? e.dataTransfer.types.join(', ') : 'NOPE')\n    )\n\n    let uris = null\n    let text\n    if (e.dataTransfer.types) {\n      for (let t = 0; t < e.dataTransfer.types.length; t++) {\n        const type = e.dataTransfer.types[t]\n        if (type === 'text/uri-list') {\n          uris = e.dataTransfer.getData(type).split('\\n') // @ ignore those starting with #\n          debug.log('Dropped text/uri-list: ' + uris)\n        } else if (type === 'text/plain') {\n          text = e.dataTransfer.getData(type)\n        } else if (type === 'Files' && droppedFileHandler) {\n          const files = e.dataTransfer.files // FileList object.\n          for (let i = 0; files[i]; i++) {\n            const f = files[i]\n            debug.log(\n              'Filename: ' +\n                f.name +\n                ', type: ' +\n                (f.type || 'n/a') +\n                ' size: ' +\n                f.size +\n                ' bytes, last modified: ' +\n                (f.lastModifiedDate\n                  ? f.lastModifiedDate.toLocaleDateString()\n                  : 'n/a')\n            )\n          }\n          droppedFileHandler(files)\n        }\n      }\n      if (uris === null && text && text.slice(0, 4) === 'http') {\n        uris = text\n        debug.log(\"Waring: Poor man's drop: using text for URI\") // chrome disables text/uri-list??\n      }\n    } else {\n      // ... however, if we're IE, we don't have the .types property, so we'll just get the Text value\n      uris = [e.dataTransfer.getData('Text')]\n      debug.log('WARNING non-standard drop event: ' + uris[0])\n    }\n    debug.log('Dropped URI list (2): ' + uris)\n    if (uris) {\n      droppedURIHandler(uris)\n    }\n    this.style.backgroundColor = 'white' // restore style\n    return false\n  } // dropListener\n\n  const addTargetListeners = function (ele) {\n    if (!ele) {\n      debug.log('@@@ addTargetListeners: ele ' + ele)\n    }\n    ele.addEventListener('dragover', dragoverListener)\n    ele.addEventListener('dragenter', dragenterListener)\n    ele.addEventListener('dragleave', dragleaveListener)\n    ele.addEventListener('drop', dropListener)\n  }\n  addTargetListeners(ele, droppedURIHandler)\n} // listen for dropped URIs\n\n// Make an HTML element draggable as a URI-identified thing\n//\n// Possibly later set the drag image too?\n//\nfunction makeDraggable (tr, obj) {\n  tr.setAttribute('draggable', 'true') // Stop the image being dragged instead - just the TR\n\n  tr.addEventListener(\n    'dragstart',\n    function (e) {\n      tr.style.fontWeight = 'bold'\n      e.dataTransfer.setData('text/uri-list', obj.uri)\n      e.dataTransfer.setData('text/plain', obj.uri)\n      e.dataTransfer.setData('text/html', tr.outerHTML)\n      debug.log(\n        'Dragstart: ' + tr + ' -> ' + obj + 'de: ' + e.dataTransfer.dropEffect\n      )\n    },\n    false\n  )\n\n  tr.addEventListener(\n    'drag',\n    function (e) {\n      e.preventDefault()\n      e.stopPropagation()\n      // debug.log('Drag: dropEffect: ' + e.dataTransfer.dropEffect)\n    },\n    false\n  )\n\n  tr.addEventListener(\n    'dragend',\n    function (e) {\n      tr.style.fontWeight = 'normal'\n      debug.log('Dragend dropeffect: ' + e.dataTransfer.dropEffect)\n      debug.log('Dragend: ' + tr + ' -> ' + obj)\n    },\n    false\n  )\n}\n\n/** uploadFiles\n**\n**  Generic uploader of local files to the web\n**   typically called from dropped file handler\n**\n**  @param {Fetcher} fetcher    instance of class Fetcher as in kb.fetcher\n**  @param {Array<File>} files      Array of file objects\n**  @param {String} fileBase    URI of folder in which to put files (except images) (no trailing slash)\n**  @param {String } imageBase  URI of folder in which to put images\n**  @param successHandler function(file, uploadedURI)    Called after EACH success upload\n**                              With file object an final URI as params\n*/\n\nfunction uploadFiles (fetcher, files, fileBase, imageBase, successHandler) {\n  for (let i = 0; files[i]; i++) {\n    const f = files[i]\n    debug.log(\n      ' dropped: Filename: ' +\n        f.name +\n        ', type: ' +\n        (f.type || 'n/a') +\n        ' size: ' +\n        f.size +\n        ' bytes, last modified: ' +\n        (f.lastModifiedDate ? f.lastModifiedDate.toLocaleDateString() : 'n/a')\n    ) // See e.g. https://www.html5rocks.com/en/tutorials/file/dndfiles/\n\n    // @@ Add: progress bar(s)\n    const reader = new FileReader()\n    reader.onload = (function (theFile) {\n      return function (e) {\n        const data = e.target.result\n        let suffix = ''\n        debug.log(' File read byteLength : ' + data.byteLength)\n        let contentType = theFile.type\n        if (!theFile.type || theFile.type === '') {\n          // Not known by browser\n          contentType = mime.lookup(theFile.name)\n          if (!contentType) {\n            const msg =\n              'Filename needs to have an extension which gives a type we know: ' +\n              theFile.name\n            debug.log(msg)\n            alert(msg)\n            throw new Error(msg)\n          }\n        } else {\n          const extension = mime.extension(theFile.type)\n          // Note not simple: eg .mp3 => audio/mpeg; .mpga => audio/mpeg; audio/mp3 => .mp3\n          if (!theFile.name.endsWith('.' + extension) && // Not already has preferred extension? and ...\n            theFile.type !== mime.lookup(theFile.name)) { // the mime type of this ext is not the right one?\n            suffix = '_.' + extension\n            // console.log('MIME TYPE MISMATCH: ' + mime.lookup(theFile.name) + ': adding extension: ' + suffix)\n          }\n        }\n        const folderName = theFile.type.startsWith('image/')\n          ? imageBase || fileBase\n          : fileBase\n        const destURI =\n          folderName +\n          (folderName.endsWith('/') ? '' : '/') +\n          encodeURIComponent(theFile.name) +\n          suffix\n\n        fetcher\n          .webOperation('PUT', destURI, {\n            data: data,\n            contentType: contentType\n          })\n          .then(\n            _response => {\n              debug.log(' Upload: put OK: ' + destURI)\n              successHandler(theFile, destURI)\n            },\n            error => {\n              const msg = ' Upload: FAIL ' + destURI + ', Error: ' + error\n              debug.log(msg)\n              alert(msg)\n              throw new Error(msg)\n            }\n          )\n      }\n    })(f)\n    reader.readAsArrayBuffer(f)\n  }\n}\n"],"file":"dragAndDrop.js"}