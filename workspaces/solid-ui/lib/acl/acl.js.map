{"version":3,"sources":["../../src/acl/acl.ts"],"names":["kb","solidLogicSingleton","store","adoptACLDefault","doc","aclDoc","defaultResource","defaultACLDoc","ACL","ns","acl","isContainer","uri","slice","defaults","each","undefined","concat","proposed","reduce","accumulatedStatements","da","statementsMatching","rdf","kb2","forEach","st","add","move","subject","predicate","object","symbol","y","length","readACL","getDefaults","auths","getDefaultsFallback","ac","agent","agentClass","agentGroup","origin","originClass","Object","keys","pred","a","mode","sameACL","b","contains","ACLunion","list","ag","k","loadUnionACL","subjectList","callbackFunction","aclList","doList","shift","getACLorDefault","ok","p2","targetDoc","targetACLDoc","defaultHolder","defa","push","ACLbyCombination","byCombo","combo","sort","combo2","join","makeACLGraph","x","makeACLGraphbyCombo","main","modeURIs","split","short","map","u","sym","i","pairs","ACLToString","comboToString","str","initials","sameTerm","foaf","utils","label","makeACLString","putACLObject","putACLbyCombo","updater","put","message","fetcher","unload","requested","fixIndividualCardACL","person","log","groups","vcard","fixIndividualACL","item","subjects","debug","exists","union","setACL","docURI","aclText","any","ACL_LINK","Error","webOperation","value","data","contentType","then","res","error","nowOrWhenFetched","body","getACL","status","tryParent","right","lastIndexOf","left","indexOf","doc2","nonexistent","response","getProspectiveHolder","targetDirectory","Promise","resolve","reject","isDirectACL"],"mappings":"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","sourcesContent":["/**\n * Non-UI functions for access control.\n * See https://github.com/solid/web-access-control-spec\n * for the spec that defines how ACL documents work.\n * @packageDocumentation\n */\n\nimport ns from '../ns'\nimport { solidLogicSingleton } from '../logic'\nimport utils from '../utils'\nimport { AgentMapMap, AgentMapUnion, ComboList } from './types'\nimport * as debug from '../debug'\nimport { graph, IndexedFormula, NamedNode, serialize, st, Statement, sym } from 'rdflib'\nimport { LiveStore } from 'pane-registry'\nimport { ACL_LINK } from 'solid-logic'\n\nconst kb = solidLogicSingleton.store\n\n/**\n * Take the \"default\" ACL and convert it into the equivlent ACL\n * which the resource would have had. Return it as a new separate store.\n * The \"defaultForNew\" predicate is also accepted, as a deprecated\n * synonym for \"default\".\n */\nexport function adoptACLDefault (\n  doc: NamedNode,\n  aclDoc: NamedNode,\n  defaultResource: NamedNode,\n  defaultACLDoc: NamedNode\n): IndexedFormula {\n  const ACL = ns.acl\n  const isContainer = doc.uri.slice(-1) === '/' // Give default for all directories\n\n  const defaults = kb\n    .each(undefined, ACL('default'), defaultResource, defaultACLDoc)\n    .concat(kb.each(undefined, ACL('defaultForNew'), defaultResource, defaultACLDoc))\n\n  const proposed = defaults.reduce((accumulatedStatements, da) => accumulatedStatements\n    .concat(kb.statementsMatching(da as NamedNode, ns.rdf('type'), ACL('Authorization'), defaultACLDoc))\n    .concat(kb.statementsMatching(da as NamedNode, ACL('agent'), undefined, defaultACLDoc))\n    .concat(kb.statementsMatching(da as NamedNode, ACL('agentClass'), undefined, defaultACLDoc))\n    .concat(kb.statementsMatching(da as NamedNode, ACL('agentGroup'), undefined, defaultACLDoc))\n    .concat(kb.statementsMatching(da as NamedNode, ACL('origin'), undefined, defaultACLDoc))\n    .concat(kb.statementsMatching(da as NamedNode, ACL('originClass'), undefined, defaultACLDoc))\n    .concat(kb.statementsMatching(da as NamedNode, ACL('mode'), undefined, defaultACLDoc))\n    .concat(st(da as NamedNode, ACL('accessTo'), doc, defaultACLDoc))\n    .concat(isContainer ? st(da as NamedNode, ACL('default'), doc, defaultACLDoc) : []), [] as Statement[])\n\n  const kb2 = graph() // Potential - derived is kept apart\n  proposed.forEach(st => kb2.add(move(st.subject), move(st.predicate), move(st.object), sym(aclDoc.uri)))\n  return kb2\n\n  function move (symbol) {\n    const y = defaultACLDoc.uri.length // The default ACL file\n    return sym(\n      symbol.uri.slice(0, y) === defaultACLDoc.uri\n        ? aclDoc.uri + symbol.uri.slice(y)\n        : symbol.uri\n    )\n  }\n}\n\n/**\n * Read and canonicalize the ACL for x in aclDoc\n *\n * Accumulate the access rights which each agent or class has\n */\nexport function readACL (\n  doc: NamedNode,\n  aclDoc: NamedNode,\n  kb2: IndexedFormula = kb,\n  getDefaults: boolean = false\n): AgentMapMap {\n  const auths: Array<NamedNode> = getDefaults\n    ? getDefaultsFallback(kb2, ns)\n    : kb2.each(undefined, ns.acl('accessTo'), doc)\n\n  const ACL = ns.acl\n  const ac = {\n    agent: {},\n    agentClass: {},\n    agentGroup: {},\n    origin: {},\n    originClass: {}\n  }\n  Object.keys(ac).forEach(pred => {\n    auths.forEach(function (a) {\n      (kb2.each(a, ACL('mode')) as Array<NamedNode>).forEach(function (mode) {\n        (kb2.each(a, ACL(pred)) as Array<NamedNode>).forEach(function (agent) {\n          ac[pred][agent.uri] = ac[pred][agent.uri] || {}\n          ac[pred][agent.uri][mode.uri] = a // could be \"true\" but leave pointer just in case\n        })\n      })\n    })\n  })\n  return ac\n\n  function getDefaultsFallback (kb, ns) {\n    return kb\n      .each(undefined, ns.acl('default'), doc)\n      .concat(kb.each(undefined, ns.acl('defaultForNew'), doc))\n  }\n}\n\n/**\n * Compare two ACLs\n */\nexport function sameACL (a: AgentMapMap | AgentMapUnion, b: AgentMapMap | AgentMapUnion): boolean {\n  const contains = function (a, b) {\n    for (const pred in {\n      agent: true,\n      agentClass: true,\n      agentGroup: true,\n      origin: true,\n      originClass: true\n    }) {\n      if (a[pred]) {\n        for (const agent in a[pred]) {\n          for (const mode in a[pred][agent]) {\n            if (!b[pred][agent] || !b[pred][agent][mode]) {\n              return false\n            }\n          }\n        }\n      }\n    }\n    return true\n  }\n  return contains(a, b) && contains(b, a)\n}\n\n/**\n * Union N ACLs\n */\nexport function ACLunion (list: Array<AgentMapMap | AgentMapUnion>): AgentMapUnion {\n  const b = list[0]\n  let a, ag\n  for (let k = 1; k < list.length; k++) {\n    ;['agent', 'agentClass', 'agentGroup', 'origin', 'originClass'].forEach(\n      function (pred) {\n        a = list[k]\n        if (a[pred]) {\n          for (ag in a[pred]) {\n            for (const mode in a[pred][ag]) {\n              if (!b[pred][ag]) b[pred][ag] = []\n              b[pred][ag][mode] = true\n            }\n          }\n        }\n      }\n    )\n  }\n  return b as AgentMapUnion\n}\n\ntype loadUnionACLCallback = (ok: boolean, message?: string | NamedNode | AgentMapUnion | AgentMapMap) => void\n\n/**\n * Merge ACLs lists from things to form union\n */\nexport function loadUnionACL (subjectList: Array<NamedNode>, callbackFunction: loadUnionACLCallback): void {\n  const aclList: Array<AgentMapMap> = []\n  const doList = function (list) {\n    if (list.length) {\n      const doc = list.shift().doc()\n      getACLorDefault(doc, function (\n        ok,\n        p2,\n        targetDoc,\n        targetACLDoc,\n        defaultHolder,\n        defaultACLDoc\n      ) {\n        const defa = !p2\n        if (!ok || !defaultHolder || !defaultACLDoc) return callbackFunction(ok, targetACLDoc)\n        const acl = defa\n          ? readACL(defaultHolder, defaultACLDoc)\n          : readACL(targetDoc as NamedNode, targetACLDoc as NamedNode)\n        aclList.push(acl)\n        doList(list.slice(1))\n      })\n    } else {\n      // all gone\n      callbackFunction(true, ACLunion(aclList))\n    }\n  }\n  doList(subjectList)\n}\n\n/**\n * Represents these as an RDF graph by combination of modes\n *\n * Each agent can only be in one place in this model, one combination of modes.\n * Combos are like full control, read append, read only etc.\n */\nexport function ACLbyCombination (ac: AgentMapMap | AgentMapUnion): ComboList {\n  const byCombo = {}\n  ;['agent', 'agentClass', 'agentGroup', 'origin', 'originClass'].forEach(function (pred) {\n    for (const agent in ac[pred]) {\n      const combo: string[] = []\n      for (const mode in ac[pred][agent]) {\n        combo.push(mode)\n      }\n      combo.sort()\n      const combo2 = combo.join('\\n')\n      if (!byCombo[combo2]) byCombo[combo2] = []\n      byCombo[combo2].push([pred, agent])\n    }\n  })\n  return byCombo\n}\n\n/**\n * Write ACL graph to store from AC\n */\nexport function makeACLGraph (kb: IndexedFormula, x: NamedNode, ac: AgentMapMap, aclDoc: NamedNode): void {\n  const byCombo = ACLbyCombination(ac)\n  return makeACLGraphbyCombo(kb, x, byCombo, aclDoc)\n}\n\n/**\n * Write ACL graph to store from combo\n */\nexport function makeACLGraphbyCombo (\n  kb: IndexedFormula,\n  x: NamedNode,\n  byCombo: ComboList,\n  aclDoc: NamedNode,\n  main?: boolean,\n  defa?: boolean\n): void {\n  const ACL = ns.acl\n  for (const combo in byCombo) {\n    const modeURIs = combo.split('\\n')\n    let short = modeURIs\n      .map(function (u) {\n        return u.split('#')[1]\n      })\n      .join('')\n    if (defa && !main) short += 'Default' // don't muddle authorizations\n    const a = kb.sym(aclDoc.uri + '#' + short)\n    kb.add(a, ns.rdf('type'), ACL('Authorization'), aclDoc)\n    if (main) {\n      kb.add(a, ACL('accessTo'), x, aclDoc)\n    }\n    if (defa) {\n      kb.add(a, ACL('default'), x, aclDoc)\n    }\n    for (let i = 0; i < modeURIs.length; i++) {\n      kb.add(a, ACL('mode'), kb.sym(modeURIs[i]), aclDoc)\n    }\n    const pairs = byCombo[combo]\n    for (let i = 0; i < pairs.length; i++) {\n      const pred = pairs[i][0]\n      const ag = pairs[i][1]\n      kb.add(a, ACL(pred), kb.sym(ag), aclDoc)\n    }\n  }\n}\n\n/**\n * Debugging short strings for dumping ACL\n * and possibly in the UI\n */\nexport function ACLToString (ac: AgentMapMap): string {\n  return comboToString(ACLbyCombination(ac))\n}\n\n/**\n * Convert a [[ComboList]] to a string\n */\nexport function comboToString (byCombo: ComboList): string {\n  let str = ''\n  for (const combo in byCombo) {\n    const modeURIs = combo.split('\\n')\n    const initials = modeURIs\n      .map(function (u) {\n        return u.split('#')[1][0]\n      })\n      .join('')\n    str += initials + ':'\n    const pairs = byCombo[combo]\n    for (let i = 0; i < pairs.length; i++) {\n      const pred = pairs[i][0]\n      const ag = sym(pairs[i][1])\n      str += pred === 'agent' ? '@' : ''\n      str += ag.sameTerm(ns.foaf('Agent')) ? '*' : utils.label(ag)\n      if (i < pairs.length - 1) str += ','\n    }\n    str += ';'\n  }\n  return '{' + str.slice(0, -1) + '}' // drop extra semicolon\n}\n\n/**\n * Write ACL graph as Turtle\n */\nexport function makeACLString (x: NamedNode, ac: AgentMapMap, aclDoc: NamedNode): string {\n  const kb2 = graph()\n  makeACLGraph(kb2, x, ac, aclDoc)\n  return serialize(aclDoc, kb2, aclDoc.uri, 'text/turtle') || ''\n}\n\n/**\n * Write ACL graph to web\n */\nexport function putACLObject (\n  kb: LiveStore,\n  x: NamedNode,\n  ac: AgentMapMap | AgentMapUnion,\n  aclDoc: NamedNode,\n  callbackFunction: (ok: boolean, message?: string) => void\n): void {\n  const byCombo = ACLbyCombination(ac)\n  return putACLbyCombo(kb, x, byCombo, aclDoc, callbackFunction)\n}\n\n/**\n * Write ACL graph to web from a [[ComboList]]\n */\nexport function putACLbyCombo (\n  kb: LiveStore,\n  x: NamedNode,\n  byCombo: ComboList,\n  aclDoc: NamedNode,\n  callbackFunction: (ok: boolean, message?: string) => void\n): void {\n  const kb2 = graph()\n  makeACLGraphbyCombo(kb2, x, byCombo, aclDoc, true)\n\n  // const str = makeACLString = function(x, ac, aclDoc)\n  kb.updater.put(\n    aclDoc,\n    kb2.statementsMatching(undefined, undefined, undefined, aclDoc),\n    'text/turtle',\n    function (uri, ok, message) {\n      if (!ok) {\n        callbackFunction(ok, message)\n      } else {\n        kb.fetcher.unload(aclDoc)\n        makeACLGraphbyCombo(kb, x, byCombo, aclDoc, true)\n        kb.fetcher.requested[aclDoc.uri] = 'done' // missing: save headers\n        callbackFunction(ok)\n      }\n    }\n  )\n}\n\ntype fixIndividualCardACLCallback = (ok: boolean, message?: string | NamedNode | AgentMapUnion | AgentMapMap) => void\ntype fixIndividualACLCallback = (ok: boolean, message?: string | NamedNode | AgentMapUnion | AgentMapMap) => void\n\n/**\n * Fix the ACl for an individual card as a function of the groups it is in\n *\n * All group files must be loaded first\n */\nexport function fixIndividualCardACL (person: NamedNode, log: Function, callbackFunction: fixIndividualCardACLCallback): void {\n  const groups = kb.each(undefined, ns.vcard('hasMember'), person) as NamedNode[]\n  // const doc = person.doc()\n  if (groups) {\n    fixIndividualACL(person, groups, log, callbackFunction)\n  } else {\n    log('This card is in no groups')\n    callbackFunction(true) // fine, no requirements to access. default should be ok\n  }\n  // @@ if no groups, then use default for People container or the book top container.?\n}\n\n/**\n * This function is used by [[fixIndividualCardACL]]\n */\nexport function fixIndividualACL (item: NamedNode, subjects: Array<NamedNode>, log: Function, callbackFunction: fixIndividualACLCallback): void {\n  log = log || debug.log\n  const doc = item.doc()\n  getACLorDefault(doc, function (\n    ok,\n    exists,\n    targetDoc,\n    targetACLDoc,\n    defaultHolder,\n    defaultACLDoc\n  ) {\n    if (!ok || !defaultHolder || !defaultACLDoc) return callbackFunction(false, targetACLDoc) // ie message\n    const ac = exists\n      ? readACL(targetDoc as NamedNode, targetACLDoc as NamedNode)\n      : readACL(defaultHolder, defaultACLDoc)\n    loadUnionACL(subjects, function (ok, union) {\n      if (!ok) return callbackFunction(false, union)\n      if (sameACL(union as AgentMapMap | AgentMapUnion, ac)) {\n        log('Nice - same ACL. no change ' + utils.label(item) + ' ' + doc)\n      } else {\n        log('Group ACLs differ for ' + utils.label(item) + ' ' + doc)\n\n        // log(\"Group ACLs: \" + makeACLString(targetDoc, union, targetACLDoc))\n        // log((exists ? \"Previous set\" : \"Default\") + \" ACLs: \" +\n        // makeACLString(targetDoc, ac, targetACLDoc))\n\n        putACLObject(\n          kb as unknown as LiveStore,\n          targetDoc as NamedNode,\n          union as AgentMapMap | AgentMapUnion,\n          targetACLDoc as NamedNode,\n          callbackFunction\n        )\n      }\n    })\n  })\n}\n\n/**\n * Set an ACL\n */\nexport function setACL (\n  docURI: NamedNode,\n  aclText: string,\n  callbackFunction: (ok: boolean, message: string) => void\n): void {\n  const aclDoc = kb.any(\n    docURI,\n    ACL_LINK\n  ) // @@ check that this get set by web.js\n  if (!kb.fetcher) {\n    throw new Error('Store has no fetcher')\n  }\n  if (aclDoc) {\n    // Great we already know where it is\n    kb.fetcher\n      .webOperation('PUT', aclDoc.value, {\n        data: aclText,\n        contentType: 'text/turtle'\n      })\n      .then((res) => {\n        callbackFunction(res.ok, res.error || '')\n      }) // @@@ check params\n  } else {\n    kb.fetcher.nowOrWhenFetched(docURI, undefined, function (ok, body) {\n      if (!ok) return callbackFunction(ok, 'Gettting headers for ACL: ' + body)\n      const aclDoc = kb.any(\n        docURI,\n        ACL_LINK\n      ) // @@ check that this get set by web.js\n      if (!aclDoc) {\n        // complainIfBad(false, \"No Link rel=ACL header for \" + docURI)\n        callbackFunction(false, 'No Link rel=ACL header for ' + docURI)\n      } else {\n        if (!kb.fetcher) {\n          throw new Error('Store has no fetcher')\n        }\n        kb.fetcher\n          .webOperation('PUT', aclDoc.value, {\n            data: aclText,\n            contentType: 'text/turtle'\n          })\n          .then((res) => {\n            callbackFunction(res.ok, res.error || '')\n          })\n      }\n    })\n  }\n}\n\n/**\n * Get ACL file or default if necessary\n *\n * @param callbackFunction  Will be called in the following ways, in the following cases:\n * * `callbackFunction(true, true, doc, aclDoc)` if the ACL did exist\n * * `callbackFunction(true, false, doc, aclDoc, defaultHolder, defaultACLDoc)` if the ACL file did not exist but a default did\n * * `callbackFunction(false, false, status, message)` when there was an error getting the original\n * * `callbackFunction(false, true, status, message)` when there was an error getting the default\n */\nexport function getACLorDefault (\n  doc: NamedNode,\n  callbackFunction: (\n    a: boolean,\n    b: boolean,\n    statusOrMessage: number | NamedNode,\n    message: string | NamedNode,\n    c?: NamedNode,\n    d?: NamedNode\n  ) => void\n): void {\n  getACL(doc, function (ok, status, aclDoc, message): string | void {\n    const ACL = ns.acl\n    if (!ok) return callbackFunction(false, false, status as number, message as string)\n\n    // Recursively search for the ACL file which gives default access\n    const tryParent = function (uri) {\n      if (uri.slice(-1) === '/') {\n        uri = uri.slice(0, -1)\n      }\n      const right = uri.lastIndexOf('/')\n      const left = uri.indexOf('/', uri.indexOf('//') + 2)\n      if (left > right) {\n        return callbackFunction(false, true, 404, 'Found no ACL resource')\n      }\n      uri = uri.slice(0, right + 1)\n      const doc2 = sym(uri)\n      getACL(doc2, function (ok, status, defaultACLDoc: any): NamedNode | void {\n        if (!ok) {\n          return callbackFunction(\n            false,\n            true,\n            status as number,\n            `( No ACL pointer ${uri} ${status})${defaultACLDoc}`\n          ) as void\n        } else if (status === 403) {\n          return callbackFunction(\n            false,\n            true,\n            status,\n            `( default ACL file FORBIDDEN. Stop.${uri})`\n          )\n        } else if (status === 404) {\n          return tryParent(uri)\n        } else if (status !== 200) {\n          return callbackFunction(\n            false,\n            true,\n            status as number,\n            `Error status '${status}' searching for default for ${doc2}`\n          )\n        }\n        // 200\n        // statusBlock.textContent += (\" ACCESS set at \" + uri + \". End search.\")\n        const defaults = kb\n          .each(undefined, ACL('default'), kb.sym(uri), defaultACLDoc)\n          .concat(\n            kb.each(undefined, ACL('defaultForNew'), kb.sym(uri), defaultACLDoc)\n          )\n        if (!defaults.length) {\n          return tryParent(uri) // Keep searching\n        }\n        const defaultHolder = kb.sym(uri)\n        return callbackFunction(\n          true,\n          false,\n          doc,\n          aclDoc as NamedNode,\n          defaultHolder,\n          defaultACLDoc as NamedNode\n        )\n      })\n    } // tryParent\n\n    if (!ok) {\n      return callbackFunction(\n        false,\n        false,\n        status as number,\n        `Error accessing Access Control information for ${doc}) ${message}`\n      )\n    } else if (status === 404) {\n      tryParent(doc.uri) //  @@ construct default one - the server should do that\n    } else if (status === 403) {\n      return callbackFunction(\n        false,\n        false,\n        status,\n        `(Sharing not available to you)${message}`\n      )\n    } else if (status !== 200) {\n      return callbackFunction(\n        false,\n        false,\n        status as number,\n        `Error ${status} accessing Access Control information for ${doc}: ${message}`\n      )\n    } else {\n      // 200\n      return callbackFunction(true, true, doc, aclDoc as NamedNode)\n    }\n  }) // Call to getACL\n}\n\n/**\n * Calls back `(ok, status, acldoc, message)` as follows\n *\n * * `(false, 900, errormessage)` if no link header\n * * `(true, 403, documentSymbol, fileaccesserror)` if not authorized\n * * `(true, 404, documentSymbol, fileaccesserror)` if does not exist\n * * `(true, 200, documentSymbol)` if file exists and read OK\n */\nexport function getACL (\n  doc: NamedNode,\n  callbackFunction: (\n    ok: boolean,\n    messageOrStatus: number | string,\n    messageOrDoc?: NamedNode | string,\n    message?: string\n  ) => void\n): void {\n  if (!kb.fetcher) {\n    throw new Error('kb has no fetcher')\n  }\n  kb.fetcher.nowOrWhenFetched(doc, undefined, function (ok, body) {\n    if (!ok) {\n      return callbackFunction(ok, `Can't get headers to find ACL for ${doc}: ${body}`)\n    }\n    const aclDoc = kb.any(\n      doc,\n      ACL_LINK\n    ) // @@ check that this get set by web.js\n    if (!aclDoc) {\n      callbackFunction(false, 900, `No Link rel=ACL header for ${doc}`)\n    } else {\n      if (!kb.fetcher) {\n        throw new Error('kb has no fetcher')\n      }\n      if (kb.fetcher.nonexistent[aclDoc.value]) {\n        return callbackFunction(\n          true,\n          404,\n          aclDoc as NamedNode,\n          `ACL file ${aclDoc} does not exist.`\n        )\n      }\n      kb.fetcher.nowOrWhenFetched(aclDoc as NamedNode, undefined, function (\n        ok,\n        message,\n        response\n      ) {\n        if (!ok) {\n          callbackFunction(\n            true,\n            response.status,\n            aclDoc as NamedNode,\n            `Can't read Access Control File ${aclDoc}: ${message}`\n          )\n        } else {\n          callbackFunction(true, 200, aclDoc as NamedNode)\n        }\n      })\n    }\n  })\n}\n\n/**\n * Calls [[getACLorDefault]] and then (?)\n */\nexport async function getProspectiveHolder (targetDirectory: string): Promise<NamedNode | undefined> {\n  return new Promise((resolve, reject) => getACLorDefault(sym(targetDirectory), (\n    ok,\n    isDirectACL,\n    targetDoc,\n    targetACLDoc,\n    defaultHolder\n  ) => {\n    if (ok) {\n      return resolve((isDirectACL ? targetDoc : defaultHolder) as NamedNode)\n    }\n    return reject(new Error(`Error loading ${targetDirectory}`))\n  }))\n}\n"],"file":"acl.js"}