{"version":3,"sources":["../../src/acl/access-groups.ts"],"names":["ACL","ns","acl","COLLOQUIAL","RECOMMENDED","EXPLANATION","AccessGroups","doc","aclDoc","controller","store","options","defaults","_store","aclMap","byCombo","addAgentButton","AddAgentButtons","rootElement","dom","createElement","classList","add","classes","accessGroupList","innerHTML","renderGroups","forEach","group","appendChild","isEditable","render","groupElements","comboIndex","combo","kToCombo","push","renderGroup","groupRow","accessGroupListItem","widgets","makeDropTarget","uris","handleDroppedUris","then","error","renderStatus","groupColumns","renderGroupElements","column","groupNameColumn","toggle","innerText","ktToList","groupAgentsColumn","groupAgentsTable","combos","map","pred","obj","renderAgent","agentElement","groupDescriptionElement","personRow","personTR","deleteFunction","deleteAgent","removeChild","comboToRemove","find","comboPred","comboObj","splice","indexOf","save","uri","handleDroppedUri","Promise","all","reject","secondAttempt","agent","findAgent","thing","debug","log","fetcher","load","message","Error","setACLCombo","subject","res","removeAgentFromCombos","k","i","length","y","sort","join","list","kb","types","findTypeURIs","ty","startsWith","split","endsWith","slice","vcard","sameTerm","foaf","rdf","owl","pref","any","solid"],"mappings":"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","sourcesContent":["/**\n * Contains the [[AccessGroups]]\n * and [[AccessGroupsOptions]] classes\n * @packageDocumentation\n */\n\nimport { fetcher, IndexedFormula, NamedNode, sym } from 'rdflib'\nimport { ACLbyCombination, readACL } from './acl'\nimport widgets from '../widgets'\nimport ns from '../ns'\nimport { AccessController } from './access-controller'\nimport { AgentMapMap, ComboList, PartialAgentTriple } from './types'\nimport { AddAgentButtons } from './add-agent-buttons'\nimport * as debug from '../debug'\nimport { LiveStore } from 'pane-registry'\n\nconst ACL = ns.acl\n\nconst COLLOQUIAL = {\n  13: 'Owners',\n  9: 'Owners (write locked)',\n  5: 'Editors',\n  3: 'Posters',\n  2: 'Submitters',\n  1: 'Viewers'\n}\n\nconst RECOMMENDED = {\n  13: true,\n  5: true,\n  3: true,\n  2: true,\n  1: true\n}\n\nconst EXPLANATION = {\n  13: 'can read, write, and control sharing.',\n  9: 'can read and control sharing, currently write-locked.',\n  5: 'can read and change information',\n  3: 'can add new information, and read but not change existing information',\n  2: 'can add new information but not read any',\n  1: 'can read but not change information'\n}\n\n/**\n * Type for the options parameter of [[AccessGroups]]\n */\nexport interface AccessGroupsOptions {\n  defaults?: boolean\n}\n\n/**\n * Renders the table of Owners, Editors, Posters, Submitters, Viewers\n * for https://github.com/solid/userguide/blob/main/views/sharing/userguide.md\n */\nexport class AccessGroups {\n  private readonly defaults: boolean\n  public byCombo: ComboList\n  public aclMap: AgentMapMap\n  private readonly addAgentButton: AddAgentButtons\n  private readonly rootElement: HTMLElement\n  private _store: LiveStore\n\n  constructor (\n    private doc: NamedNode,\n    private aclDoc: NamedNode,\n    public controller: AccessController,\n    store: IndexedFormula,\n    private options: AccessGroupsOptions = {}\n  ) {\n    this.defaults = options.defaults || false\n    fetcher(store, {})\n\n    // The store will already have an updater at this point:\n    // store.updater = new UpdateManager(store)\n\n    this._store = store as LiveStore // TODO hacky, find a better solution\n    this.aclMap = readACL(doc, aclDoc, store, this.defaults)\n    this.byCombo = ACLbyCombination(this.aclMap)\n    this.addAgentButton = new AddAgentButtons(this)\n    this.rootElement = this.controller.dom.createElement('div')\n    this.rootElement.classList.add(this.controller.classes.accessGroupList)\n  }\n\n  public get store () {\n    return this._store\n  }\n\n  public set store (store) {\n    this._store = store\n    this.aclMap = readACL(this.doc, this.aclDoc, store, this.defaults)\n    this.byCombo = ACLbyCombination(this.aclMap)\n  }\n\n  public render (): HTMLElement {\n    this.rootElement.innerHTML = ''\n    this.renderGroups().forEach(group => this.rootElement.appendChild(group))\n    if (this.controller.isEditable) {\n      this.rootElement.appendChild(this.addAgentButton.render())\n    }\n    return this.rootElement\n  }\n\n  private renderGroups (): HTMLElement[] {\n    const groupElements: HTMLElement[] = []\n    for (let comboIndex = 15; comboIndex > 0; comboIndex--) {\n      const combo = kToCombo(comboIndex)\n      if ((this.controller.isEditable && RECOMMENDED[comboIndex]) || this.byCombo[combo]) {\n        groupElements.push(this.renderGroup(comboIndex, combo))\n      }\n    }\n    return groupElements\n  }\n\n  private renderGroup (comboIndex: number, combo: string): HTMLElement {\n    const groupRow = this.controller.dom.createElement('div')\n    groupRow.classList.add(this.controller.classes.accessGroupListItem)\n    widgets.makeDropTarget(groupRow, (uris) => this.handleDroppedUris(uris, combo)\n      .then(() => this.controller.render())\n      .catch(error => this.controller.renderStatus(error)))\n    const groupColumns = this.renderGroupElements(comboIndex, combo)\n    groupColumns.forEach(column => groupRow.appendChild(column))\n    return groupRow\n  }\n\n  private renderGroupElements (comboIndex, combo): HTMLElement[] {\n    const groupNameColumn = this.controller.dom.createElement('div')\n    groupNameColumn.classList.add(this.controller.classes.group)\n    groupNameColumn.classList.toggle(this.controller.classes[`group-${comboIndex}`], this.controller.isEditable)\n    groupNameColumn.innerText = COLLOQUIAL[comboIndex] || ktToList(comboIndex)\n\n    const groupAgentsColumn = this.controller.dom.createElement('div')\n    groupAgentsColumn.classList.add(this.controller.classes.group)\n    groupAgentsColumn.classList.toggle(this.controller.classes[`group-${comboIndex}`], this.controller.isEditable)\n    const groupAgentsTable = groupAgentsColumn.appendChild(this.controller.dom.createElement('table'))\n    const combos = this.byCombo[combo] || []\n    combos\n      .map(([pred, obj]) => this.renderAgent(groupAgentsTable, combo, pred, obj))\n      .forEach(agentElement => groupAgentsTable.appendChild(agentElement))\n\n    const groupDescriptionElement = this.controller.dom.createElement('div')\n    groupDescriptionElement.classList.add(this.controller.classes.group)\n    groupDescriptionElement.classList.toggle(this.controller.classes[`group-${comboIndex}`], this.controller.isEditable)\n    groupDescriptionElement.innerText = EXPLANATION[comboIndex] || 'Unusual combination'\n\n    return [groupNameColumn, groupAgentsColumn, groupDescriptionElement]\n  }\n\n  private renderAgent (groupAgentsTable, combo, pred, obj): HTMLElement {\n    const personRow = widgets.personTR(this.controller.dom, ACL(pred), sym(obj), this.controller.isEditable\n      ? {\n          deleteFunction: () => this.deleteAgent(combo, pred, obj)\n            .then(() => groupAgentsTable.removeChild(personRow))\n            .catch(error => this.controller.renderStatus(error))\n        }\n      : {})\n    return personRow\n  }\n\n  private async deleteAgent (combo, pred, obj): Promise<void> {\n    const combos = this.byCombo[combo] || []\n    const comboToRemove = combos.find(([comboPred, comboObj]) => comboPred === pred && comboObj === obj)\n    if (comboToRemove) {\n      combos.splice(combos.indexOf(comboToRemove), 1)\n    }\n    await this.controller.save()\n  }\n\n  public async addNewURI (uri: string): Promise<void> {\n    await this.handleDroppedUri(uri, kToCombo(1))\n    await this.controller.save()\n  }\n\n  private async handleDroppedUris (uris: string[], combo: string): Promise<void> {\n    try {\n      await Promise.all(uris.map(uri => this.handleDroppedUri(uri, combo)))\n      await this.controller.save()\n    } catch (error) {\n      return Promise.reject(error)\n    }\n  }\n\n  private async handleDroppedUri (uri: string, combo: string, secondAttempt: boolean = false): Promise<void> {\n    const agent = findAgent(uri, this.store) // eg 'agent', 'origin', agentClass'\n    const thing = sym(uri)\n    if (!agent && !secondAttempt) {\n      debug.log(`   Not obvious: looking up dropped thing ${thing}`)\n      try {\n        await this._store.fetcher.load(thing.doc())\n      } catch (error) {\n        const message = `Ignore error looking up dropped thing: ${error}`\n        debug.error(message)\n        return Promise.reject(new Error(message))\n      }\n      return this.handleDroppedUri(uri, combo, true)\n    } else if (!agent) {\n      const error = `   Error: Drop fails to drop appropriate thing! ${uri}`\n      debug.error(error)\n      return Promise.reject(new Error(error))\n    }\n    this.setACLCombo(combo, uri, agent, this.controller.subject)\n  }\n\n  private setACLCombo (combo: string, uri: string, res: PartialAgentTriple, subject: NamedNode): void {\n    if (!(combo in this.byCombo)) {\n      this.byCombo[combo] = []\n    }\n    this.removeAgentFromCombos(uri) // Combos are mutually distinct\n    this.byCombo[combo].push([res.pred, res.obj.uri])\n    debug.log(`ACL: setting access to ${subject} by ${res.pred}: ${res.obj}`)\n  }\n\n  private removeAgentFromCombos (uri: string): void {\n    for (let k = 0; k < 16; k++) {\n      const combos = this.byCombo[kToCombo(k)]\n      if (combos) {\n        for (let i = 0; i < combos.length; i++) {\n          while (i < combos.length && combos[i][1] === uri) {\n            combos.splice(i, 1)\n          }\n        }\n      }\n    }\n  }\n}\n\nfunction kToCombo (k: number): string {\n  const y = ['Read', 'Append', 'Write', 'Control']\n  const combo: string[] = []\n  for (let i = 0; i < 4; i++) {\n    if (k & (1 << i)) {\n      combo.push('http://www.w3.org/ns/auth/acl#' + y[i])\n    }\n  }\n  combo.sort()\n  return combo.join('\\n')\n}\n\nfunction ktToList (k: number): string {\n  let list = ''\n  const y = ['Read', 'Append', 'Write', 'Control']\n  for (let i = 0; i < 4; i++) {\n    if (k & (1 << i)) {\n      list += y[i]\n    }\n  }\n  return list\n}\n\nfunction findAgent (uri, kb): PartialAgentTriple | null {\n  const obj = sym(uri)\n  const types = kb.findTypeURIs(obj)\n  for (const ty in types) {\n    debug.log('    drop object type includes: ' + ty)\n  }\n  // An Origin URI is one like https://fred.github.io eith no trailing slash\n  if (uri.startsWith('http') && uri.split('/').length === 3) {\n    // there is no third slash\n    return { pred: 'origin', obj: obj } // The only way to know an origin alas\n  }\n  // @@ This is an almighty kludge needed because drag and drop adds extra slashes to origins\n  if (\n    uri.startsWith('http') &&\n    uri.split('/').length === 4 &&\n    uri.endsWith('/')\n  ) {\n    // there  IS third slash\n    debug.log('Assuming final slash on dragged origin URI was unintended!')\n    return { pred: 'origin', obj: sym(uri.slice(0, -1)) } // Fix a URI where the drag and drop system has added a spurious slash\n  }\n\n  if (ns.vcard('WebID').uri in types) return { pred: 'agent', obj: obj }\n\n  if (ns.vcard('Group').uri in types) {\n    return { pred: 'agentGroup', obj: obj } // @@ note vcard membership not RDFs\n  }\n  if (\n    obj.sameTerm(ns.foaf('Agent')) ||\n    obj.sameTerm(ns.acl('AuthenticatedAgent')) || // AuthenticatedAgent\n    obj.sameTerm(ns.rdf('Resource')) ||\n    obj.sameTerm(ns.owl('Thing'))\n  ) {\n    return { pred: 'agentClass', obj: obj }\n  }\n  if (\n    ns.vcard('Individual').uri in types ||\n    ns.foaf('Person').uri in types ||\n    ns.foaf('Agent').uri in types\n  ) {\n    const pref = kb.any(obj, ns.foaf('preferredURI'))\n    if (pref) return { pred: 'agent', obj: sym(pref) }\n    return { pred: 'agent', obj: obj }\n  }\n  if (ns.solid('AppProvider').uri in types) {\n    return { pred: 'origin', obj: obj }\n  }\n  if (ns.solid('AppProviderClass').uri in types) {\n    return { pred: 'originClass', obj: obj }\n  }\n  debug.log('    Triage fails for ' + uri)\n  return null\n}\n"],"file":"access-groups.js"}