{"version":3,"sources":["../../src/acl/add-agent-buttons.ts"],"names":["AddAgentButtons","groupList","rootElement","controller","dom","createElement","barElement","innerHTML","appendChild","renderAddButton","widgets","button","icons","iconBase","toggleBar","renderBar","isExpanded","renderPersonButton","renderGroupButton","renderPublicButton","renderAuthenticatedAgentButton","renderBotButton","renderAppsButton","Array","from","children","filter","element","forEach","removeChild","iconForClass","event","renderSimplifiedBar","target","renderNameForm","ns","vcard","then","name","addPerson","renderCleanup","error","renderStatus","addGroup","type","noun","askName","store","addAgent","foaf","uri","renderTemporaryStatus","acl","schema","addBot","eventContext","div","existingApps","renderAppsTable","renderAppsView","newApp","getOriginFromName","Promise","race","origin","addNewURI","trustedApplications","context","session","paneRegistry","byName","trustedApplicationsElement","render","classList","add","classes","trustedAppController","cancelButton","trustedAppCancelButton","insertBefore","firstChild","trustedApps","each","me","trustedOrigins","flatMap","app","textContent","length","resolve","reject","appsTable","trustedAppAddApplicationsTable","any","Error","value","thingTR","personTR","innerTable","innerRow","innerLeftColumn","innerMiddleColumn","utils","label","subject","innerRightColumn","continueButton","domainNameRegexp","match","debug","log","agentUri"],"mappings":"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","sourcesContent":["/**\n * Contains the [[AddAgentButtons]] class\n * @packageDocumentation\n */\n\nimport { AccessGroups } from './access-groups'\nimport icons from '../iconBase'\nimport widgets from '../widgets'\nimport ns from '../ns'\nimport { logInLoadProfile } from '../authn/authn'\nimport utils from '../utils'\nimport { NamedNode, Store } from 'rdflib'\nimport { AuthenticationContext } from '../authn/types'\nimport * as debug from '../debug'\n\n/**\n * Renders the Sharing pane's \"+\" button and the menus behind it,\n * see https://github.com/solid/userguide/blob/main/views/sharing/userguide.md#add\n */\nexport class AddAgentButtons {\n  private readonly rootElement: HTMLElement\n  private readonly barElement: HTMLElement\n  private isExpanded: boolean = false\n\n  constructor (private groupList: AccessGroups) {\n    this.rootElement = groupList.controller.dom.createElement('div')\n    this.barElement = groupList.controller.dom.createElement('div')\n  }\n\n  public render (): HTMLElement {\n    this.rootElement.innerHTML = ''\n    this.rootElement.appendChild(this.renderAddButton())\n    this.rootElement.appendChild(this.barElement)\n    return this.rootElement\n  }\n\n  private renderAddButton (): HTMLElement {\n    return widgets.button(\n      this.groupList.controller.dom,\n      `${icons.iconBase}noun_34653_green.svg`,\n      'Add ...',\n      () => {\n        this.toggleBar()\n        this.renderBar()\n      }\n    )\n  }\n\n  private renderBar (): void {\n    this.barElement.innerHTML = ''\n    if (!this.isExpanded) {\n      return\n    }\n    this.barElement.appendChild(this.renderPersonButton())\n    this.barElement.appendChild(this.renderGroupButton())\n    this.barElement.appendChild(this.renderPublicButton())\n    this.barElement.appendChild(this.renderAuthenticatedAgentButton())\n    this.barElement.appendChild(this.renderBotButton())\n    this.barElement.appendChild(this.renderAppsButton())\n  }\n\n  private renderSimplifiedBar (button: EventTarget | null) {\n    Array.from(this.barElement.children)\n      .filter(element => element !== button)\n      .forEach(element => this.barElement.removeChild(element))\n  }\n\n  private renderPersonButton (): HTMLElement {\n    return widgets.button(\n      this.groupList.controller.dom,\n      icons.iconBase + widgets.iconForClass['vcard:Individual'],\n      'Add Person',\n      event => {\n        this.renderSimplifiedBar(event.target)\n        this.renderNameForm(ns.vcard('Individual'), 'person')\n          .then(name => this.addPerson(name))\n          .then(() => this.renderCleanup())\n          .catch(error => this.groupList.controller.renderStatus(error))\n      }\n    )\n  }\n\n  private renderGroupButton (): HTMLElement {\n    return widgets.button(\n      this.groupList.controller.dom,\n      icons.iconBase + widgets.iconForClass['vcard:Group'],\n      'Add Group',\n      event => {\n        this.renderSimplifiedBar(event.target)\n        this.renderNameForm(ns.vcard('Group'), 'group')\n          .then(name => this.addGroup(name))\n          .then(() => this.renderCleanup())\n          .catch(error => this.groupList.controller.renderStatus(error))\n      }\n    )\n  }\n\n  private renderNameForm (type: NamedNode, noun: string): Promise<string | undefined> {\n    return widgets.askName(\n      this.groupList.controller.dom,\n      this.groupList.store,\n      this.barElement,\n      ns.vcard('URI'),\n      type,\n      noun\n    )\n  }\n\n  private renderPublicButton (): HTMLElement {\n    return widgets.button(\n      this.groupList.controller.dom,\n      icons.iconBase + widgets.iconForClass['foaf:Agent'],\n      'Add Everyone',\n      () => this.addAgent(ns.foaf('Agent').uri)\n        .then(() => this.groupList.controller.renderTemporaryStatus('Adding the general public to those who can read. Drag the globe to a different level to give them more access.'))\n        .then(() => this.renderCleanup()))\n  }\n\n  private renderAuthenticatedAgentButton (): HTMLElement {\n    return widgets.button(\n      this.groupList.controller.dom,\n      `${icons.iconBase}noun_99101.svg`,\n      'Anyone logged In',\n      () => this.addAgent(ns.acl('AuthenticatedAgent').uri)\n        .then(() => this.groupList.controller.renderTemporaryStatus('Adding anyone logged in to those who can read. Drag the ID icon to a different level to give them more access.'))\n        .then(() => this.renderCleanup()))\n  }\n\n  private renderBotButton (): HTMLElement {\n    return widgets.button(\n      this.groupList.controller.dom,\n      icons.iconBase + 'noun_Robot_849764.svg',\n      'A Software Agent (bot)',\n      event => {\n        this.renderSimplifiedBar(event.target)\n        this.renderNameForm(ns.schema('Application'), 'bot')\n          .then(name => this.addBot(name))\n          .then(() => this.renderCleanup())\n      })\n  }\n\n  private renderAppsButton (): HTMLElement {\n    return widgets.button(\n      this.groupList.controller.dom,\n      `${icons.iconBase}noun_15177.svg`,\n      'A Web App (origin)',\n      event => {\n        this.renderSimplifiedBar(event.target)\n        const eventContext = {\n          div: this.barElement,\n          dom: this.groupList.controller.dom\n        }\n        const existingApps = this.renderAppsTable(eventContext)\n          .catch(error => this.groupList.controller.renderStatus(error))\n        this.renderAppsView()\n        const newApp = this.renderNameForm(ns.schema('WebApplication'), 'webapp domain')\n          .then(name => this.getOriginFromName(name))\n        Promise.race([\n          existingApps,\n          newApp\n        ])\n          .then(origin => {\n            if (origin) {\n              this.groupList.addNewURI(origin)\n            }\n          })\n          .then(() => this.renderCleanup())\n      }\n    )\n  }\n\n  private renderAppsView (): void {\n    const trustedApplications = this.groupList.controller.context.session.paneRegistry.byName('trustedApplications')\n    if (trustedApplications) {\n      const trustedApplicationsElement = trustedApplications.render(null, this.groupList.controller.context)\n      trustedApplicationsElement.classList.add(this.groupList.controller.classes.trustedAppController)\n\n      const cancelButton = widgets.cancelButton(this.groupList.controller.dom, () => this.renderCleanup())\n      cancelButton.classList.add(this.groupList.controller.classes.trustedAppCancelButton)\n      trustedApplicationsElement.insertBefore(cancelButton, trustedApplicationsElement.firstChild)\n\n      this.barElement.appendChild(trustedApplicationsElement)\n    }\n  }\n\n  private async renderAppsTable (eventContext: AuthenticationContext): Promise<string> {\n    await logInLoadProfile(eventContext)\n    const trustedApps = (this.groupList.store as Store).each(eventContext.me, ns.acl('trustedApp')) as Array<NamedNode> // @@ TODO fix as\n    const trustedOrigins = trustedApps.flatMap(app => (this.groupList.store as Store).each(app, ns.acl('origin'))) // @@ TODO fix as\n\n    this.barElement.appendChild(this.groupList.controller.dom.createElement('p')).textContent = `You have ${trustedOrigins.length} selected web apps.`\n    return new Promise((resolve, reject) => {\n      const appsTable = this.barElement.appendChild(this.groupList.controller.dom.createElement('table'))\n      appsTable.classList.add(this.groupList.controller.classes.trustedAppAddApplicationsTable)\n      trustedApps.forEach(app => {\n        const origin = (this.groupList.store as Store).any(app, ns.acl('origin')) // @@ TODO fix as\n        if (!origin) {\n          reject(new Error(`Unable to pick app: ${app.value}`))\n        }\n        const thingTR = widgets.personTR(this.groupList.controller.dom, ns.acl('origin'), origin, {})\n        const innerTable = this.groupList.controller.dom.createElement('table')\n        const innerRow = innerTable.appendChild(this.groupList.controller.dom.createElement('tr'))\n\n        const innerLeftColumn = innerRow.appendChild(this.groupList.controller.dom.createElement('td'))\n        innerLeftColumn.appendChild(thingTR)\n\n        const innerMiddleColumn = innerRow.appendChild(this.groupList.controller.dom.createElement('td'))\n        innerMiddleColumn.textContent = `Give access to ${this.groupList.controller.noun} ${utils.label(this.groupList.controller.subject)}?`\n\n        const innerRightColumn = innerRow.appendChild(this.groupList.controller.dom.createElement('td'))\n        innerRightColumn.appendChild(widgets.continueButton(this.groupList.controller.dom, () => resolve(origin!.value)))\n\n        appsTable.appendChild(innerTable)\n      })\n    })\n  }\n\n  private renderCleanup (): void {\n    this.renderBar()\n    this.groupList.render()\n  }\n\n  private async addPerson (name?: string): Promise<void> {\n    if (!name) return this.toggleBar() // user cancelled\n    const domainNameRegexp = /^https?:/i\n    if (!name.match(domainNameRegexp)) {\n      // @@ enforce in user input live like a form element\n      return Promise.reject(new Error('Not a http URI'))\n    }\n    // @@ check it actually is a person and has an owner who agrees they own it\n    debug.log(`Adding to ACL person: ${name}`)\n    await this.groupList.addNewURI(name)\n    this.toggleBar()\n  }\n\n  private async addGroup (name?: string): Promise<void> {\n    if (!name) return this.toggleBar() // user cancelled\n\n    const domainNameRegexp = /^https?:/i\n    if (!name.match(domainNameRegexp)) {\n      // @@ enforce in user input live like a form element\n      return Promise.reject(new Error('Not a http URI'))\n    }\n    // @@ check it actually is a group and has an owner who agrees they own it\n    debug.log('Adding to ACL group: ' + name)\n    await this.groupList.addNewURI(name)\n    this.toggleBar()\n  }\n\n  private async addAgent (agentUri: string): Promise<void> {\n    await this.groupList.addNewURI(agentUri)\n    this.toggleBar()\n  }\n\n  private async addBot (name?: string): Promise<void> {\n    if (!name) return this.toggleBar() // user cancelled\n    const domainNameRegexp = /^https?:/i\n    if (!name.match(domainNameRegexp)) {\n      // @@ enforce in user input live like a form element\n      return Promise.reject(new Error('Not a http URI'))\n    }\n    // @@ check it actually is a bot and has an owner who agrees they own it\n    debug.log('Adding to ACL bot: ' + name)\n    await this.groupList.addNewURI(name)\n    this.toggleBar()\n  }\n\n  private async getOriginFromName (name?: string): Promise<string | void> {\n    if (!name) return Promise.resolve() // user cancelled\n    const domainNameRegexp = /^([a-z0-9]+(-[a-z0-9]+)*\\.)+[a-z]{2,}$/i\n    // https://www.oreilly.com/library/view/regular-expressions-cookbook/9781449327453/ch08s15.html\n    if (!name.match(domainNameRegexp)) {\n      // @@ enforce in user input live like a form element\n      return Promise.reject(new Error('Not a domain name'))\n    }\n    const origin = 'https://' + name\n    debug.log('Adding to ACL origin: ' + origin)\n    this.toggleBar()\n    return origin\n  }\n\n  private toggleBar (): void {\n    this.isExpanded = !this.isExpanded\n  }\n}\n"],"file":"add-agent-buttons.js"}