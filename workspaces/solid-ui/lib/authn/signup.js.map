{"version":3,"sources":["../../src/authn/signup.js"],"names":["defaultConfig","require","Signup","config","prototype","listen","promise","Promise","resolve","reject","eventMethod","window","addEventListener","eventListener","messageEvent","e","u","data","slice","user","length","signup","signupUrl","signupEndpoint","width","signupWindowWidth","height","signupWindowHeight","leftPosition","screen","topPosition","windowTitle","windowUrl","encodeURIComponent","location","origin","windowSpecs","open","self","then","webid","module","exports"],"mappings":"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","sourcesContent":["const defaultConfig = require('./config-default')\n\n/**\n * Provides functionality for signing up with a Solid provider\n * @module signup\n */\n\n/**\n * Creates a Signup UI manager\n * @class\n */\nfunction Signup (config) {\n  this.config = config || defaultConfig\n}\n\n/**\n * Sets up an event listener to monitor login messages from child window/iframe\n * @method listen\n * @return {Promise<String>} Event listener promise, resolves to user's WebID\n */\nSignup.prototype.listen = function listen () {\n  const promise = new Promise(function (resolve, reject) {\n    const eventMethod = window.addEventListener\n      ? 'addEventListener'\n      : 'attachEvent'\n    const eventListener = window[eventMethod]\n    const messageEvent = eventMethod === 'attachEvent'\n      ? 'onmessage'\n      : 'message'\n    eventListener(messageEvent, function (e) {\n      const u = e.data\n      if (u.slice(0, 5) === 'User:') {\n        const user = u.slice(5, u.length)\n        if (user && user.length > 0 && user.slice(0, 4) === 'http') {\n          return resolve(user)\n        } else {\n          return reject(user)\n        }\n      }\n    }, true)\n  })\n  return promise\n}\n\n/**\n * Opens a signup popup window, sets up `listen()`.\n * @method signup\n * @static\n * @param signupUrl {String} Location of a Solid server for user signup.\n * @return {Promise<String>} Returns a listener promise, resolves with signed\n *   up user's WebID.\n */\nSignup.prototype.signup = function signup (signupUrl) {\n  signupUrl = signupUrl || this.config.signupEndpoint\n  const width = this.config.signupWindowWidth\n  const height = this.config.signupWindowHeight\n  // set borders\n  const leftPosition = (window.screen.width / 2) - ((width / 2) + 10)\n  // set title and status bars\n  const topPosition = (window.screen.height / 2) - ((height / 2) + 50)\n  const windowTitle = 'Solid signup'\n  const windowUrl = signupUrl + '?origin=' +\n    encodeURIComponent(window.location.origin)\n  const windowSpecs = 'resizable,scrollbars,status,width=' + width + ',height=' +\n    height + ',left=' + leftPosition + ',top=' + topPosition\n  window.open(windowUrl, windowTitle, windowSpecs)\n  const self = this\n  return new Promise(function (resolve) {\n    self.listen()\n      .then(function (webid) {\n        return resolve(webid)\n      })\n  })\n}\n\nmodule.exports = Signup\n"],"file":"signup.js"}