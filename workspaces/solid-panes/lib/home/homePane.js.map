{"version":3,"sources":["../../src/home/homePane.ts"],"names":["HomePaneSource","icon","icons","iconBase","global","name","label","render","subject","context","dom","showContent","homePaneContext","div","statusArea","me","appendChild","createElement","textContent","creationDiv","creationContext","authn","filterAvailablePanes","session","paneRegistry","list","relevantPanes","create","newThingUI","registrationList","then","authContext","currentUser"],"mappings":";;;;;;;AAUA;;;;;;AAKA,IAAMA,cAA8B,GAAG;AACrCC,EAAAA,IAAI,EAAEC,eAAMC,QAAN,GAAiB,iBADc;AACK;AAE1CC,EAAAA,MAAM,EAAE,IAH6B;AAKrCC,EAAAA,IAAI,EAAE,MAL+B;AAOrC;AACA;AACA;AACA;AACAC,EAAAA,KAAK,EAAE,iBAAY;AACjB,WAAO,MAAP;AACD,GAboC;AAerCC,EAAAA,MAAM,EAAE,gBAAUC,OAAV,EAAmBC,OAAnB,EAA4B;AAClC,QAAMC,GAAG,GAAGD,OAAO,CAACC,GAApB;;AACA,QAAMC,WAAW;AAAA,yEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AACZC,gBAAAA,eADY,GACM;AAAEC,kBAAAA,GAAG,EAAEA,GAAP;AAAYH,kBAAAA,GAAG,EAAEA,GAAjB;AAAsBI,kBAAAA,UAAU,EAAED,GAAlC;AAAuCE,kBAAAA,EAAE,EAAEA;AAA3C,iBADN;AAElB;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACMF,gBAAAA,GAAG,CAACG,WAAJ,CAAgBN,GAAG,CAACO,aAAJ,CAAkB,IAAlB,CAAhB,EAAyCC,WAAzC,GACE,4BADF;AAEMC,gBAAAA,WAbY,GAaEN,GAAG,CAACG,WAAJ,CAAgBN,GAAG,CAACO,aAAJ,CAAkB,KAAlB,CAAhB,CAbF;AAcZG,gBAAAA,eAdY,GAcqB;AACrCP,kBAAAA,GAAG,EAAEM,WADgC;AAErCT,kBAAAA,GAAG,EAAEA,GAFgC;AAGrCI,kBAAAA,UAAU,EAAED,GAHyB;AAIrCE,kBAAAA,EAAE,EAAEA;AAJiC,iBAdrB;AAAA;AAAA,uBAoBUM,eAAMC,oBAAN,CAC1Bb,OAAO,CAACc,OAAR,CAAgBC,YAAhB,CAA6BC,IADH,CApBV;;AAAA;AAoBZC,gBAAAA,aApBY;;AAuBlBC,gCAAOC,UAAP,CAAkBR,eAAlB,EAAmCX,OAAnC,EAA4CiB,aAA5C,EAvBkB,CAuByC;;;AAE3Db,gBAAAA,GAAG,CAACG,WAAJ,CAAgBN,GAAG,CAACO,aAAJ,CAAkB,IAAlB,CAAhB,EAAyCC,WAAzC,GAAuD,gBAAvD,CAzBkB,CA0BlB;;AACAG,+BACGQ,gBADH,CACoBjB,eADpB,EACqC;AAAE,6BAAS;AAAX,iBADrC,EAEGkB,IAFH,CAEQ,UAAUC,WAAV,EAAuB;AAC3BlB,kBAAAA,GAAG,CAACG,WAAJ,CAAgBN,GAAG,CAACO,aAAJ,CAAkB,IAAlB,CAAhB,EAAyCC,WAAzC,GAAuD,eAAvD;AACAL,kBAAAA,GAAG,CAACG,WAAJ,CAAgBN,GAAG,CAACO,aAAJ,CAAkB,GAAlB,CAAhB,EAAwCC,WAAxC,GACE,4CADF;;AAEAG,iCACGQ,gBADH,CACoBE,WADpB,EACiC;AAAE,8BAAQ;AAAV,mBADjC,EAEGD,IAFH,CAEQ,YAAY,CAChB;AACD,mBAJH;AAKD,iBAXH;;AA3BkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH;;AAAA,sBAAXnB,WAAW;AAAA;AAAA;AAAA,OAAjB;;AAyCA,QAAME,GAAG,GAAGH,GAAG,CAACO,aAAJ,CAAkB,KAAlB,CAAZ;;AACA,QAAMF,EAAa,GAAGM,eAAMW,WAAN,EAAtB,CA5CkC,CA4CqB;;;AAEvDrB,IAAAA,WAAW;AAEX,WAAOE,GAAP;AACD;AAhEoC,CAAvC,C,CAiEE;AAEF;;eACeb,c","sourcesContent":["/*   Home Pane\n **\n ** The home pane is avaiable everywhere and allows a user\n ** to\n **  - keep track of their stuff\n **  - make new things, and possibly\n **  - keep track of accounts and workspaces etc\n **\n */\n\nimport { authn, create, icons } from 'solid-ui'\nimport { PaneDefinition } from 'pane-registry'\nimport { CreateContext } from 'solid-ui/lib/create/types'\nimport { NamedNode } from 'rdflib'\n\nconst HomePaneSource: PaneDefinition = {\n  icon: icons.iconBase + 'noun_547570.svg', // noun_25830\n\n  global: true,\n\n  name: 'home',\n\n  // Does the subject deserve an home pane?\n  //\n  //   yes, always!\n  //\n  label: function () {\n    return 'home'\n  },\n\n  render: function (subject, context) {\n    const dom = context.dom\n    const showContent = async function () {\n      const homePaneContext = { div: div, dom: dom, statusArea: div, me: me }\n      /*\n            div.appendChild(dom.createElement('h4')).textContent = 'Login status'\n            var loginStatusDiv = div.appendChild(context.dom.createElement('div'))\n            // TODO: Find out what the actual type is:\n            type UriType = unknown;\n            loginStatusDiv.appendChild(UI.authn.loginStatusBox(context.dom, () => {\n              // Here we know new log in status\n            }))\n      */\n      div.appendChild(dom.createElement('h4')).textContent =\n        'Create new thing somewhere'\n      const creationDiv = div.appendChild(dom.createElement('div'))\n      const creationContext: CreateContext = {\n        div: creationDiv,\n        dom: dom,\n        statusArea: div,\n        me: me\n      }\n      const relevantPanes = await authn.filterAvailablePanes(\n        context.session.paneRegistry.list\n      )\n      create.newThingUI(creationContext, context, relevantPanes) // newUI Have to pass panes down\n\n      div.appendChild(dom.createElement('h4')).textContent = 'Private things'\n      // TODO: Replace by a common, representative interface\n      authn\n        .registrationList(homePaneContext, { private: true })\n        .then(function (authContext) {\n          div.appendChild(dom.createElement('h4')).textContent = 'Public things'\n          div.appendChild(dom.createElement('p')).textContent =\n            'Things in this list are visible to others.'\n          authn\n            .registrationList(authContext, { public: true })\n            .then(function () {\n              // done\n            })\n        })\n    }\n\n    const div = dom.createElement('div')\n    const me: NamedNode = authn.currentUser() as NamedNode // this will be incorrect if not logged in\n\n    showContent()\n\n    return div\n  }\n} // pane object\n\n// ends\nexport default HomePaneSource\n"],"file":"homePane.js"}