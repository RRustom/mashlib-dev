{"version":3,"sources":["../../src/outline/userInput.js"],"names":["UI","require","$rdf","rdf","panes","UserInputFormula","TempFormula","module","exports","UserInput","outline","kb","store","myDocument","document","menuId","qp","str","console","log","ns","bibo","Namespace","dcelems","movedArrow","Formula","superFormula","IndexedFormula","name","updater","UpdateManager","sparqler","lastModified","lastModifiedStat","statIsInverse","addNewPredicateObject","e","utils","getTarget","className","This","target","insertTr","createElement","ancestor","insertBefore","tempTr","reqTerm1","generateRequest","appendChild","firstChild","reqTerm2","previousSibling","AJAR_statement","preStat","formUndetStat","subject","why","getAbout","parentNode","doc","sym","Util","uri","docpart","walk","info","getSelection","map","item","textContent","join","startFillInText","addNewObject","predicateTd","isInverse","AJAR_inverse","appendToPredicate","reqTerm","predicate","object","lastChild","Delete","selectedTd","deleteTriple","Enter","literalModification","Click","getTerm","termType","preventDefault","stopPropagation","pasteFromClipboard","address","termFrom","fromCode","term","clipboard","shift","warn","allArray","all","i","sameTerm","splice","Error","nextSibling","returnArray","insertTermTo","whatSortOfEditCell","emptyNode","createInputBoxIn","isNew","select","performAutoCompleteEdit","debug","indexOf","about","getStatementAbout","obj","trNode","error","tdNode","removeChild","value","match","textBox","createTextNode","setAttribute","length","toString","menu","addEventListener","getAutoCompleteHandler","backOut","clearMenu","getElementById","menuID","clearInputAndSave","s","defaultValue","Statement","literal","defaultpropview","views","defaults","trCache","update","success","errorBody","add","s1","s2","s3","valueCache","oldValue","st","replace","textTerm","selectedPredicate","elements","any","undefined","pageX","findPos","pageY","clientHeight","showMenu","dialogTerm","bnodeTerm","type","the","anyStatementMatching","remove","enclosingTd","defaultPane","byName","outlineExpand","pane","already","focusTd","fillInRequest","removeMany","upperTr","replaceTD","outlineObjectTD","isBackOut","removedTr","whether","link","removefromview","trIterator","childNodes","theNext","parseInt","getAttribute","clipboardInit","objects","predicates","copyToClipboard","unshift","isObject","AJAR_statemnet","stackString","statements","push","paneDiv","newTr","outlinePredicateTD","Refill","isPredicate","predicateQuery","subjectClass","sparqlText","endl","rdfs","variable","SPARQLToQuery","predicateTerm","owl","classQuery","mode","InputBox","enterEvent","setHighlightItem","lastHighlight","showURI","newText","keyCode","tagName","createNew","inputURI","jtitle","innerHTML","juri","slice","inputTerm","fillInType","String","fromCharCode","charCode","inputText","WildCardButtons","menuDiv","div","input1","input2","highlightInput","Keypress","targetOf","preRows","Mousedown","window","ctrlKey","switchMode","oncontextmenu","button","Mouseover","_tabulatorMode","preTd","style","cursor","border","borderColor","Mouseout","something","statement","defaultText","UpAndDown","OutlinerKeypressPanel","location","inputBox","_e","targetdoc","newTerm","nextSymbol","tiptext","typeURIhandler","newuri","isEnd","colspan","display","hasAttribute","table","bnode2symbol","bnode","symbol","copyTo","tipText","trNew","notShow","tp","newNode","menuType","inputQuery","extraInformation","_order","x","id","top","left","getOffset","el","_lf","_tp","oldlf","oldtp","newlf","newtp","isNaN","offsetLeft","offsetTop","scrollLeft","scrollTop","loc","body","highlightTr","selectItem","IDpredicate","IDterm","clickedTd","predicateChoices","tr","newTd","NameSpaces","each","forEach","ontology","label","addMenuItem","Label","predicateLabelForXML","theNamespace","string_startswith","th","toUpperCase","addPredicateChoice","selectedQuery","bindings","vars","width","h1","h1th","plist","statementsMatching","text","h2","h2th","ans1","ans2","labeller","searchAdv","results","tempQuery","tempBinding","Kenny","fromNT","NT","entries","search","types","thisNT","toNT","typeLabel","juris","matchedtitle","jtstr","matchstr","toLowerCase","jTitleLowerCase","choiceTerm","choices","nullFetcher","constructor","query","stat","newStat","doNext","eventhandler","_errorBody","newStats","inverse"],"mappings":"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","sourcesContent":["/* istanbul ignore file */\n// Original author: kennyluck\n//\n// Kenny's Notes:\n/* places to generate SPARQL update: clearInputAndSave() pasteFromClipboard()->insertTermTo();\n                                  undetermined statement generated formUndetStat()\n                                                                 ->fillInRequest()\n   ontological issues\n    temporarily using the tabont namespace\n    clipboard: 'predicates' 'objects' 'all'(internal)\n    request: 'from' 'to' 'message' 'Request'\n*/\n\nconst UI = require('solid-ui')\nconst $rdf = UI.rdf\nconst panes = require('pane-registry')\n\nlet UserInputFormula // Formula to store references of user's work\nlet TempFormula // Formula to store incomplete triples (Requests),\n// temporarily disjoint with kb to avoid bugs\n\nmodule.exports = function UserInput (outline) {\n  const kb = UI.store\n\n  const myDocument = outline.document // is this ok?\n  // UI.log.warn(\"myDocument when it's set is \"+myDocument.location);\n  this.menuId = 'predicateMenu1'\n\n  /* //namespace information, as a subgraph of the knowledge base, is built in showMenu\n    this.namespaces={};\n\n    for (var name in UI.ns) {\n        this.namespaces[name] = UI.ns[name]('').uri;\n    }\n    var NameSpaces=this.namespaces;\n    */\n\n  // hq, print and trim functions\n  const qp = function qp (str) {\n    console.log(str + '\\n')\n  }\n\n  // var tabont = UI.ns.tabont;\n  // var foaf = UI.ns.foaf\n  const rdf = UI.ns.rdf\n  // var RDFS = UI.ns.rdfs\n  // var OWL = UI.ns.owl\n  // var dc = UI.ns.dc\n  // var rss = UI.ns.rss\n  // var contact = UI.ns.contact\n  // var mo = UI.ns.mo\n  const bibo = UI.rdf.Namespace('http://purl.org/ontology/bibo/') // hql for pubsPane\n  // var dcterms = UI.rdf.Namespace('http://purl.org/dc/terms/')\n  const dcelems = UI.rdf.Namespace('http://purl.org/dc/elements/1.1/')\n\n  let movedArrow = false // hq\n\n  // var updateService=new updateCenter(kb);\n\n  if (!UserInputFormula) {\n    UserInputFormula = new UI.rdf.Formula()\n    UserInputFormula.superFormula = kb\n    // UserInputFormula.registerFormula(\"Your Work\");\n  }\n  if (!TempFormula) TempFormula = new UI.rdf.IndexedFormula()\n  // Use RDFIndexedFormula so add returns the statement\n  TempFormula.name = 'TempFormula'\n  if (!UI.store.updater) UI.store.updater = new UI.rdf.UpdateManager(kb)\n\n  return {\n    // updateService: updateService,\n\n    sparqler: UI.store.updater,\n    lastModified: null, // the last <input> being modified, .isNew indicates whether it's a new input\n    lastModifiedStat: null, // the last statement being modified\n    statIsInverse: false, // whether the statement is an inverse\n\n    /**\n     *  Triggering Events: event entry points, should be called only from outline.js but not anywhere else\n     *                     in userinput.js, should be as short as possible, function names to be discussed\n     */\n\n    //  Called when the blue cross under the default pane is clicked.\n    //  Add a new row to a property list ( P and O)\n    addNewPredicateObject: function addNewPredicateObject (e) {\n      if (UI.utils.getTarget(e).className !== 'bottom-border-active') return\n      const This = outline.UserInput\n      const target = UI.utils.getTarget(e)\n\n      // UI.log.warn(ancestor(target,'TABLE').textContent);\n      const insertTr = myDocument.createElement('tr')\n      UI.utils\n        .ancestor(target, 'DIV')\n        .insertBefore(insertTr, UI.utils.ancestor(target, 'TR'))\n      const tempTr = myDocument.createElement('tr')\n      const reqTerm1 = This.generateRequest('(TBD)', tempTr, true)\n      insertTr.appendChild(tempTr.firstChild)\n      const reqTerm2 = This.generateRequest(\n        '(Enter text or drag an object onto this field)',\n        tempTr,\n        false\n      )\n      insertTr.appendChild(tempTr.firstChild)\n      // there should be an elegant way of doing this\n\n      // Take the why of the last TR and write to it.\n      if (\n        UI.utils.ancestor(target, 'TR').previousSibling && // there is a previous predicate/object line\n        UI.utils.ancestor(target, 'TR').previousSibling.AJAR_statement\n      ) {\n        const preStat = UI.utils.ancestor(target, 'TR').previousSibling\n          .AJAR_statement\n        // This should always(?) input a non-inverse statement\n        This.formUndetStat(\n          insertTr,\n          preStat.subject,\n          reqTerm1,\n          reqTerm2,\n          preStat.why,\n          false\n        )\n      } else {\n        // no previous row: write to the document defining the subject\n        const subject = UI.utils.getAbout(\n          kb,\n          UI.utils.ancestor(target.parentNode.parentNode, 'TD')\n        )\n        const doc = kb.sym(UI.rdf.Util.uri.docpart(subject.uri))\n        This.formUndetStat(insertTr, subject, reqTerm1, reqTerm2, doc, false)\n      }\n\n      outline.walk('moveTo', insertTr.firstChild)\n      UI.log.info(\n        'addNewPredicateObject: selection = ' +\n          outline\n            .getSelection()\n            .map(function (item) {\n              return item.textContent\n            })\n            .join(', ')\n      )\n      this.startFillInText(outline.getSelection()[0])\n    },\n\n    //  Called when a blue cross on a predicate is clicked\n    //  tr.AJAR_inverse stores whether the clicked predicate is an inverse one\n    //  tr.AJAR_statement (an incomplete statement in TempFormula) stores the destination(why), now\n    //  determined by the preceding one (is this good?)\n    addNewObject: function addNewObject (e) {\n      const predicateTd = UI.utils.getTarget(e).parentNode.parentNode\n      // var predicateTerm = UI.utils.getAbout(kb, predicateTd)\n      const isInverse = predicateTd.parentNode.AJAR_inverse\n      // var titleTerm=UI.utils.getAbout(kb,UI.utils.ancestor(predicateTd.parentNode,'TD'));\n      // set pseudo lastModifiedStat here\n      this.lastModifiedStat = predicateTd.parentNode.AJAR_statement\n\n      const insertTr = this.appendToPredicate(predicateTd)\n      const reqTerm = this.generateRequest(' (Error) ', insertTr, false)\n      const preStat = insertTr.previousSibling.AJAR_statement\n      if (!isInverse) {\n        this.formUndetStat(\n          insertTr,\n          preStat.subject,\n          preStat.predicate,\n          reqTerm,\n          preStat.why,\n          false\n        )\n      } else {\n        this.formUndetStat(\n          insertTr,\n          reqTerm,\n          preStat.predicate,\n          preStat.object,\n          preStat.why,\n          true\n        )\n      }\n\n      outline.walk('moveTo', insertTr.lastChild)\n      this.startFillInText(insertTr.lastChild)\n      // this.statIsInverse=false;\n    },\n\n    //  Called when delete is pressed\n    Delete: function Delete (selectedTd) {\n      this.deleteTriple(selectedTd, false)\n    },\n    //  Called when enter is pressed\n    Enter: function Enter (selectedTd) {\n      this.literalModification(selectedTd)\n    },\n    //  Called when a selected cell is clicked again\n    Click: function Click (e) {\n      const target = UI.utils.getTarget(e)\n      if (UI.utils.getTerm(target).termType !== 'Literal') return\n      this.literalModification(target)\n      // this prevents the generated inputbox to be clicked again\n      e.preventDefault()\n      e.stopPropagation()\n    },\n    //  Called when paste is called (Ctrl+v)\n    pasteFromClipboard: function pasteFromClipboard (address, selectedTd) {\n      function termFrom (fromCode) {\n        const term = outline.clipboard[fromCode].shift()\n        if (term === null) {\n          UI.log.warn('no more element in clipboard!')\n          return\n        }\n        switch (fromCode) {\n          case 'predicates':\n          case 'objects':\n            var allArray = outline.clipboard.all\n            for (let i = 0; true; i++) {\n              if (term.sameTerm(allArray[i])) {\n                allArray.splice(i, 1)\n                break\n              }\n            }\n            break\n          case 'all':\n            throw new Error(\n              'hostorical code not understood - what is theCollection?'\n            )\n          /*\n            var isObject = term.sameTerm(theCollection('objects').elements[0])\n            isObject ? outline.clipboard.objecs.shift() : outline.clipboard.predicates.shift() // drop the corresponding term\n            return [term, isObject]\n            break\n            */\n        }\n        return term\n      }\n      let term\n      switch (selectedTd.className) {\n        case 'undetermined selected':\n          term = selectedTd.nextSibling\n            ? termFrom('predicates')\n            : termFrom('objects')\n          if (!term) return\n          break\n        case 'pred selected': // paste objects into this predicate\n          term = termFrom('objects')\n          if (!term) return\n          break\n        case 'selected': // header <TD>, undetermined generated\n          var returnArray = termFrom('all')\n          if (!returnArray) return\n          term = returnArray[0]\n          this.insertTermTo(selectedTd, term, returnArray[1])\n          return\n      }\n      this.insertTermTo(selectedTd, term)\n    },\n\n    /**\n     *  Intermediate Processing:\n     */\n\n    // a general entry point for any event except Click&Enter(goes to literalModification)\n    // do a little inference to pick the right input box\n    startFillInText: function startFillInText (selectedTd) {\n      switch (this.whatSortOfEditCell(selectedTd)) {\n        case 'DatatypeProperty-like':\n          // this.clearMenu();\n          // selectedTd.className='';\n          UI.utils.emptyNode(selectedTd)\n          this.lastModified = this.createInputBoxIn(\n            selectedTd,\n            ' (Please Input) '\n          )\n          this.lastModified.isNew = false\n\n          this.lastModified.select()\n          break\n        case 'predicate':\n          // the goal is to bring back all the menus (with autocomplete functionality\n          // this.performAutoCompleteEdit(selectedTd,['PredicateAutoComplete',\n          //                        this.choiceQuery('SuggestPredicateByDomain')]);\n          this.performAutoCompleteEdit(selectedTd, 'PredicateAutoComplete')\n          break\n        case 'ObjectProperty-like':\n        case 'no-idea':\n          // menu should be either function that\n          this.performAutoCompleteEdit(selectedTd, 'GeneralAutoComplete')\n\n        /*\n                //<code time=\"original\">\n                emptyNode(selectedTd);\n                this.lastModified=this.createInputBoxIn(selectedTd,\"\");\n                this.lastModified.select();\n                this.lastModified.addEventListener('keypress',this.AutoComplete,false);\n                //this pops up the autocomplete menu\n                this.AutoComplete(1);\n                //</code>\n                */\n      }\n    },\n\n    literalModification: function literalModification (selectedTd) {\n      UI.log.debug(\n        'entering literal Modification with ' +\n          selectedTd +\n          selectedTd.textContent\n      )\n      // var This=outline.UserInput;\n      if (selectedTd.className.indexOf(' pendingedit') !== -1) {\n        UI.log.warn(\n          'The node you attempted to edit has a request still pending.\\n' +\n            'Please wait for the request to finish (the text will turn black)\\n' +\n            'before editing this node again.'\n        )\n        return true\n      }\n\n      const target = selectedTd\n      const about = this.getStatementAbout(target) // timbl - to avoid alert from random clicks\n      if (!about) return\n      try {\n        var obj = UI.utils.getTerm(target)\n        var trNode = UI.utils.ancestor(target, 'TR')\n      } catch (e) {\n        UI.log.warn('userinput.js: ' + e + UI.utils.getAbout(kb, selectedTd))\n        UI.log.error(target + ' getStatement Error:' + e)\n      }\n\n      try {\n        var tdNode = trNode.lastChild\n      } catch (e) {\n        UI.log.error(e + '@' + target)\n      }\n      // seems to be a event handling problem of firefox3\n      /*\n        if (e.type!='keypress'&&(selectedTd.className=='undetermined selected'||selectedTd.className=='undetermined')){\n            this.Refill(e,selectedTd);\n            return;\n        }\n        */\n      // ignore clicking trNode.firstChild (be careful for <div> or <span>)\n      // if (e.type!='keypress'&&target!=tdNode && UI.utils.ancestor(target,'TD')!=tdNode) return;\n\n      if (obj.termType === 'Literal') {\n        tdNode.removeChild(tdNode.firstChild) // remove the text\n\n        if (obj.value.match('\\n')) {\n          // match a line feed and require <TEXTAREA>\n          const textBox = myDocument.createElement('textarea')\n          textBox.appendChild(myDocument.createTextNode(obj.value))\n          textBox.setAttribute(\n            'rows',\n            (obj.value.match(/\\n/g).length + 1).toString()\n          )\n          // g is for global(??)\n          textBox.setAttribute('cols', '100') // should be the size of <TD>\n          textBox.setAttribute('class', 'textinput')\n          tdNode.appendChild(textBox)\n          this.lastModified = textBox\n        } else {\n          this.lastModified = this.createInputBoxIn(tdNode, obj.value)\n        }\n        this.lastModified.isNew = false\n        // Kenny: What should be expected after you click a editable text element?\n        // Choice 1\n        this.lastModified.select()\n        // Choice 2 - direct the key cursor to where you click (failed attempt)\n        // --------------------------------------------------------------------------\n        // duplicate the event so user can edit without clicking twice\n        // var e2=myDocument.createEvent(\"MouseEvents\");\n        // e2.initMouseEvent(\"click\",true,true,window,0,0,0,0,0,false,false,false,false,0,null);\n        // inputBox.dispatchEvent(e2);\n        // ---------------------------------------------------------------------------\n      }\n\n      return true // this is not a valid modification\n    },\n\n    /**\n     *  UIs: input event handlers, menu generation\n     */\n    performAutoCompleteEdit: function performAutoCompleteEdit (\n      selectedTd,\n      menu\n    ) {\n      UI.utils.emptyNode(selectedTd)\n      qp('perform AutoCompleteEdit. THIS IS=' + this)\n      this.lastModified = this.createInputBoxIn(selectedTd, '')\n      this.lastModified.select()\n      this.lastModified.addEventListener(\n        'keypress',\n        this.getAutoCompleteHandler(menu),\n        false\n      )\n      /* keypress!?\n           This is what I hate about UI programming.\n           I shall write something about this but not now.\n        */\n      // this pops up the autocomplete menu\n      // Pops up the menu even though no keypress has occurred\n      // 1 is a dummy variable for the \"enterEvent\"\n      this.getAutoCompleteHandler(menu)(1)\n    },\n    backOut: function backOut () {\n      this.deleteTriple(this.lastModified.parentNode, true)\n      this.lastModified = null\n    },\n\n    clearMenu: function clearMenu () {\n      const menu = myDocument.getElementById(this.menuID)\n      if (menu) {\n        menu.parentNode.removeChild(menu)\n        // emptyNode(menu);\n      }\n    },\n\n    /* goes here when either this is a literal or escape from menu and then input text */\n    clearInputAndSave: function clearInputAndSave (e) {\n      if (!this.lastModified) return\n      if (!this.lastModified.isNew) {\n        try {\n          var obj = this.getStatementAbout(this.lastModified).object\n        } catch (e) {\n          return\n        }\n      }\n      let s = this.lastModifiedStat // when 'isNew' this is set at addNewObject()\n\n      if (this.lastModified.value !== this.lastModified.defaultValue) {\n        if (this.lastModified.value === '') {\n          // ToDo: remove this\n          this.lastModified.value = this.lastModified.defaultValue\n          this.clearInputAndSave()\n          return\n        } else if (this.lastModified.isNew) {\n          s = new UI.rdf.Statement(\n            s.subject,\n            s.predicate,\n            kb.literal(this.lastModified.value),\n            s.why\n          )\n          // TODO: DEFINE ERROR CALLBACK\n          var defaultpropview = this.views.defaults[s.predicate.uri]\n          var trCache = UI.utils.ancestor(this.lastModified, 'TR')\n          try {\n            UI.store.updater.update([], [s], function (\n              uri,\n              success,\n              errorBody\n            ) {\n              if (!success) {\n                UI.log.error(\n                  'Error occurs while inserting ' +\n                    s +\n                    '\\n\\n' +\n                    errorBody +\n                    '\\n'\n                )\n                // UI.log.warn(\"Error occurs while inserting \"+s+'\\n\\n'+errorBody);\n                outline.UserInput.deleteTriple(trCache.lastChild, true)\n              }\n            })\n          } catch (e) {\n            UI.log.error('Error inserting fact ' + s + ':\\n\\t' + e + '\\n')\n            return\n          }\n          s = kb.add(\n            s.subject,\n            s.predicate,\n            kb.literal(this.lastModified.value),\n            s.why\n          )\n        } else {\n          if (this.statIsInverse) {\n            UI.log.error(\n              \"Invalid Input: a literal can't be a subject in RDF/XML\"\n            )\n            this.backOut()\n            return\n          }\n          let s1, s2, s3\n          switch (obj.termType) {\n            case 'Literal':\n              // generate path and nailing from current values\n\n              // TODO: DEFINE ERROR CALLBACK\n              var valueCache = this.lastModified.value\n              trCache = UI.utils.ancestor(this.lastModified, 'TR')\n              var oldValue = this.lastModified.defaultValue\n              s2 = $rdf.st(\n                s.subject,\n                s.predicate,\n                kb.literal(this.lastModified.value),\n                s.why\n              )\n              try {\n                UI.store.updater.update([s], [s2], function (\n                  uri,\n                  success,\n                  errorBody\n                ) {\n                  if (success) {\n                    obj.value = valueCache\n                  } else {\n                    UI.log.warn(\n                      'Error occurs while editing ' + s + '\\n\\n' + errorBody\n                    )\n                    trCache.lastChild.textContent = oldValue\n                  }\n                  trCache.lastChild.className = trCache.lastChild.className.replace(\n                    / pendingedit/g,\n                    ''\n                  )\n                })\n              } catch (e) {\n                UI.log.warn('Error occurs while editing ' + s + ':\\n\\t' + e)\n                return\n              }\n              // obj.value=this.lastModified.value;\n              // UserInputFormula.statements.push(s);\n              break\n            case 'BlankNode': // a request refill with text\n              // var newStat\n              var textTerm = kb.literal(this.lastModified.value, '')\n              // <Feature about=\"labelChoice\">\n              if (s.predicate.termType === 'Collection') {\n                // case: add triple   ????????? Weird - tbl\n                const selectedPredicate = s.predicate.elements[0] //    @@ TBL elements is a list on the predicate??\n                if (kb.any(undefined, selectedPredicate, textTerm)) {\n                  if (!e) {\n                    // keyboard\n                    const tdNode = this.lastModified.parentNode\n                    e = {}\n                    e.pageX = UI.utils.findPos(tdNode)[0]\n                    e.pageY = UI.utils.findPos(tdNode)[1] + tdNode.clientHeight\n                  }\n                  this.showMenu(e, 'DidYouMeanDialog', undefined, {\n                    dialogTerm: kb.any(undefined, selectedPredicate, textTerm),\n                    bnodeTerm: s.subject\n                  })\n                } else {\n                  s1 = UI.utils.ancestor(\n                    UI.utils.ancestor(this.lastModified, 'TR').parentNode,\n                    'TR'\n                  ).AJAR_statement\n                  s2 = $rdf.st(s.subject, selectedPredicate, textTerm, s.why)\n                  const type = kb.the(s.subject, rdf('type'))\n                  s3 = kb.anyStatementMatching(\n                    s.subject,\n                    rdf('type'),\n                    type,\n                    s.why\n                  )\n                  // TODO: DEFINE ERROR CALLBACK\n                  // because the table is repainted, so...\n                  trCache = UI.utils.ancestor(\n                    UI.utils.ancestor(this.lastModified, 'TR'),\n                    'TD'\n                  ).parentNode\n                  try {\n                    UI.store.updater.update([], [s1, s2, s3], function (\n                      uri,\n                      success,\n                      errorBody\n                    ) {\n                      if (!success) {\n                        console.log(\n                          'Error occurs while editing ' +\n                            s1 +\n                            '\\n\\n' +\n                            errorBody\n                        )\n                        outline.UserInput.deleteTriple(trCache.lastChild, true) // @@@@ This\n                      }\n                    })\n                  } catch (e) {\n                    console.log(\n                      'Error occurs while editing ' + s1 + ':\\n\\t' + e\n                    )\n                    return\n                  }\n                  kb.remove(s)\n                  kb.add(s.subject, selectedPredicate, textTerm, s.why) // was: newStat =\n                  // a subtle bug occurs here, if foaf:nick hasn't been dereferneced,\n                  // this add will cause a repainting\n                }\n                const enclosingTd = UI.utils.ancestor(\n                  this.lastModified.parentNode.parentNode,\n                  'TD'\n                )\n                const defaultPane = panes.byName('default') // @@ check\n                outline.outlineExpand(enclosingTd, s.subject, {\n                  pane: defaultPane,\n                  already: true\n                })\n                outline.walk('right', outline.focusTd)\n                // </Feature>\n              } else {\n                this.fillInRequest(\n                  'object',\n                  this.lastModified.parentNode,\n                  kb.literal(this.lastModified.value)\n                )\n                return // The new Td is already generated by fillInRequest, so it's done.\n              }\n              break\n          }\n        }\n      } else if (this.lastModified.isNew) {\n        // generate 'Request', there is no way you can input ' (Please Input) '\n        var trNode = UI.utils.ancestor(this.lastModified, 'TR')\n        var reqTerm = this.generateRequest(\n          '(To be determined. Re-type of drag an object onto this field)'\n        )\n        var preStat = trNode.previousSibling.AJAR_statement // the statement of the same predicate\n        this.formUndetStat(\n          trNode,\n          preStat.subject,\n          preStat.predicate,\n          reqTerm,\n          preStat.why,\n          false\n        )\n        // this why being the same as the previous statement\n        this.lastModified = null\n\n        // UI.log.warn(\"test .isNew)\");\n        return\n      } else if (s.predicate.termType === 'Collection') {\n        kb.removeMany(s.subject)\n        const upperTr = UI.utils.ancestor(\n          UI.utils.ancestor(this.lastModified, 'TR').parentNode,\n          'TR'\n        )\n        preStat = upperTr.AJAR_statement\n        reqTerm = this.generateRequest(\n          '(To be determined. Re-type of drag an object onto this field)'\n        )\n        this.formUndetStat(\n          upperTr,\n          preStat.subject,\n          preStat.predicate,\n          reqTerm,\n          preStat.why,\n          false\n        )\n        outline.replaceTD(\n          outline.outlineObjectTD(reqTerm, defaultpropview),\n          upperTr.lastChild\n        )\n        this.lastModified = null\n        return\n      } else if (this.statIsInverse) {\n        /*\n      if ((s.object.termType === 'BlankNode' && !this.statIsInverse) ||\n                  s.subject.termType === 'BlankNode' && this.statIsInverse) {\n        this.backOut()\n        return\n      */\n        if (s.subject.termType === 'BlankNode') {\n          this.backOut()\n          return\n        }\n      } else {\n        if (s.object.termType === 'BlankNode') {\n          this.backOut()\n          return\n        }\n      }\n      // case modified - literal modification only(for now).\n      trNode = UI.utils.ancestor(this.lastModified, 'TR')\n      // var defaultpropview = this.views.defaults[s.predicate.uri]\n\n      if (!this.statIsInverse) {\n        // this is for an old feature\n        // outline.replaceTD(outline.outlineObjectTD(s.object, defaultpropview),trNode.lastChild);\n        outline.replaceTD(\n          outline.outlineObjectTD(\n            kb.literal(this.lastModified.value),\n            defaultpropview\n          ),\n          trNode.lastChild\n        )\n      } else {\n        outline.replaceTD(\n          outline.outlineObjectTD(s.subject, defaultpropview),\n          trNode.lastChild\n        )\n      }\n      if (this.lastModified.value !== this.lastModified.defaultValue) {\n        trNode.lastChild.className += ' pendingedit'\n      }\n      // trNode.AJAR_statement=s;//you don't have to set AJAR_inverse because it's not changed\n      // This is going to be painful when predicate-edit allowed\n      this.lastModified = null\n    },\n\n    /* deletes the triple corresponding to selectedTd, remove that Td. */\n    deleteTriple: function deleteTriple (selectedTd, isBackOut) {\n      // ToDo: complete deletion of a node\n      UI.log.debug('deleteTriple entered')\n\n      // allow a pending node to be deleted if it's a backout sent by SPARQL update callback\n      if (!isBackOut && selectedTd.className.indexOf(' pendingedit') !== -1) {\n        console.log(\n          'The node you attempted to edit has a request still pending.\\n' +\n            'Please wait for the request to finish (the text will turn black)\\n' +\n            'before editing this node again.'\n        )\n        outline.walk('up')\n        return\n      }\n      let removedTr\n      // var afterTr\n      const s = this.getStatementAbout(selectedTd)\n      if (\n        !isBackOut &&\n        !kb.whether(s.object, rdf('type'), UI.ns.link('Request')) &&\n        // Better to check whether provenance is internal?\n        !kb.whether(s.predicate, rdf('type'), UI.ns.link('Request')) &&\n        !kb.whether(s.subject, rdf('type'), UI.ns.link('Request'))\n      ) {\n        UI.log.debug('about to send SPARQLUpdate')\n        try {\n          UI.store.updater.update([s], [], function (uri, success, errorBody) {\n            if (success) {\n              removefromview()\n            } else {\n              // removedTr.AJAR_statement=kb.add(s.subject,s.predicate,s.object,s.why);\n              console.log(\n                'Error occurs while deleting ' + s + '\\n\\n' + errorBody\n              )\n              selectedTd.className = selectedTd.className.replace(\n                / pendingedit/g,\n                ''\n              )\n            }\n          })\n          selectedTd.className += ' pendingedit'\n        } catch (e) {\n          UI.log.error(e)\n          UI.log.warn('Error deleting statement ' + s + ':\\n\\t' + e)\n          return\n        }\n\n        UI.log.debug('SPARQLUpdate sent')\n      } else {\n        // removal of an undetermined statement associated with pending TRs\n        // TempFormula.remove(s);\n      }\n      UI.log.debug('about to remove ' + s)\n\n      UI.log.debug('removed')\n      outline.walk('up')\n      // eslint-disable-next-line prefer-const\n      removedTr = selectedTd.parentNode\n      // afterTr = removedTr.nextSibling\n      function removefromview () {\n        let trIterator\n        for (\n          trIterator = removedTr;\n          trIterator.childNodes.length === 1;\n          trIterator = trIterator.previousSibling\n        );\n        if (trIterator === removedTr) {\n          const theNext = trIterator.nextSibling\n          if (theNext.nextSibling && theNext.childNodes.length === 1) {\n            var predicateTd = trIterator.firstChild\n            predicateTd.setAttribute(\n              'rowspan',\n              parseInt(predicateTd.getAttribute('rowspan')) - 1\n            )\n            theNext.insertBefore(trIterator.firstChild, theNext.firstChild)\n          }\n          removedTr.parentNode.removeChild(removedTr)\n        } else {\n          // !DisplayOptions[\"display:block on\"].enabled){\n          predicateTd = trIterator.firstChild\n          predicateTd.setAttribute(\n            'rowspan',\n            parseInt(predicateTd.getAttribute('rowspan')) - 1\n          )\n          removedTr.parentNode.removeChild(removedTr)\n        }\n      }\n      if (isBackOut) removefromview()\n    },\n\n    /* clipboard principle: copy wildly, paste carefully\n      ToDoS:\n      1. register Subcollection?\n      2. copy from more than one selectedTd: 1.sequece 2.collection\n      3. make a clipboard class?\n    */\n    clipboardInit: function clipboardInit () {\n      outline.clipboard = {}\n      outline.clipboard.objects = []\n      outline.clipboard.predicates = []\n      outline.clipboard.all = []\n    },\n\n    copyToClipboard: function copyToClipboard (address, selectedTd) {\n      /*\n        var clip  = Components.classes[\"@mozilla.org/widget/clipboard;1\"].getService(Components.interfaces.nsIClipboard);\n        if (!clip) return false;\n        var clipid = Components.interfaces.nsIClipboard;\n\n        var trans = Components.classes[\"@mozilla.org/widget/transferable;1\"].createInstance(Components.interfaces.nsITransferable);\n        if (!trans) return false;\n\n        var copytext = \"Tabulator!!\";\n\n        var str   = Components.classes[\"@mozilla.org/supports-string;1\"].\n                           createInstance(Components.interfaces.nsISupportsString);\n        if (!str) return false;\n\n        str.data  = copytext;\n\n        trans.addDataFlavor(\"text/x-moz-url\");\n        trans.setTransferData(\"text/x-mox-url\", str, copytext.length * 2);\n\n        clip.setData(trans, null, clipid.kGlobalClipboard);\n        */\n\n      const term = UI.utils.getTerm(selectedTd)\n      switch (selectedTd.className) {\n        case 'selected': // table header\n        case 'obj selected':\n          // var objects = outline.clipboard.objects\n          outline.clipboard.objects.unshift(term)\n          break\n        case 'pred selected':\n        case 'pred internal selected':\n          outline.clipboard.predicates.unshift(term)\n      }\n\n      outline.clipboard.all.unshift(term)\n    },\n\n    insertTermTo: function insertTermTo (selectedTd, term, isObject) {\n      switch (selectedTd.className) {\n        case 'undetermined selected':\n          var defaultpropview = this.views.defaults[\n            selectedTd.parentNode.AJAR_statement.predicate.uri\n          ]\n          this.fillInRequest(\n            selectedTd.nextSibling ? 'predicate' : 'object',\n            selectedTd,\n            term\n          )\n          break\n        case 'pred selected': // paste objects into this predicate\n          var insertTr = this.appendToPredicate(selectedTd)\n          var preStat = selectedTd.parentNode.AJAR_statement\n          defaultpropview = this.views.defaults[preStat.predicate.uri]\n          insertTr.appendChild(outline.outlineObjectTD(term, defaultpropview))\n          // modify store and update here\n          var isInverse = selectedTd.parentNode.AJAR_inverse\n          if (!isInverse) {\n            insertTr.AJAR_statement = kb.add(\n              preStat.subject,\n              preStat.predicate,\n              term,\n              preStat.why\n            )\n          } else {\n            insertTr.AJAR_statemnet = kb.add(\n              term,\n              preStat.predicate,\n              preStat.object,\n              preStat.why\n            )\n          }\n\n          try {\n            UI.store.updater.update([], [insertTr.AJAR_statement], function (\n              uri,\n              success,\n              errorBody\n            ) {\n              if (!success) {\n                UI.log.error(\n                  'userinput.js (pred selected): Fail trying to insert statement ' +\n                    insertTr.AJAR_statement +\n                    ': ' +\n                    errorBody\n                )\n              }\n            })\n          } catch (e) {\n            UI.log.error(\n              'Exception trying to insert statement ' +\n                insertTr.AJAR_statement +\n                ': ' +\n                UI.utils.stackString(e)\n            )\n            return\n          }\n          insertTr.AJAR_inverse = isInverse\n          UserInputFormula.statements.push(insertTr.AJAR_statement)\n          break\n\n        case 'selected': // header <TD>, undetermined generated\n          var paneDiv = UI.utils.ancestor(selectedTd, 'TABLE').lastChild\n          var newTr = paneDiv.insertBefore(\n            myDocument.createElement('tr'),\n            paneDiv.lastChild\n          )\n          // var titleTerm=UI.utils.getAbout(kb,UI.utils.ancestor(newTr,'TD'));\n          preStat = newTr.previousSibling.AJAR_statement\n          if (typeof isObject === 'undefined') isObject = true\n          if (isObject) {\n            // object inserted\n            this.formUndetStat(\n              newTr,\n              preStat.subject,\n              this.generateRequest('(TBD)', newTr, true),\n              term,\n              preStat.why,\n              false\n            )\n            // defaultpropview temporaily not dealt with\n            newTr.appendChild(outline.outlineObjectTD(term))\n            outline.walk('moveTo', newTr.firstChild)\n            this.startFillInText(newTr.firstChild)\n          } else {\n            // predicate inserted\n            // existing predicate not expected\n            const reqTerm = this.generateRequest(\n              '(To be determined. Re-type of drag an object onto this field)',\n              newTr\n            )\n            this.formUndetStat(\n              newTr,\n              preStat.subject,\n              term,\n              reqTerm,\n              preStat.why,\n              false\n            )\n\n            newTr.insertBefore(\n              outline.outlinePredicateTD(term, newTr, false, false),\n              newTr.firstChild\n            )\n            outline.walk('moveTo', newTr.lastChild)\n            this.startFillInText(newTr.lastChild)\n          }\n          break\n      }\n    },\n\n    Refill: function Refill (e, selectedTd) {\n      UI.log.info('Refill' + selectedTd.textContent)\n      const isPredicate = selectedTd.nextSibling\n      let predicateQuery\n      if (isPredicate) {\n        // predicateTd\n        if (selectedTd.nextSibling.className === 'undetermined') {\n          /* Make set of proprties to propose for a predicate.\n            The  naive approach is to take those which have a class\n            of the subject as their domain.  But in fact we must offer anything which\n            is not explicitly excluded, by having a domain disjointWith a\n            class of the subject. */\n\n          /* SELECT ?pred\n               WHERE{\n                   ?pred a rdf:Property.\n                   ?pred rdfs:domain subjectClass.\n               }\n            */\n          /*  SELECT ?pred ?class\n                WHERE{\n                   ?pred a rdf:Property.\n                   subjectClass owl:subClassOf ?class.\n                   ?pred rdfs:domain ?class.\n               }\n            */\n          /*  SELECT ?pred\n                WHERE{\n                   subject a ?subjectClass.\n                   ?pred rdfs:domain ?subjectClass.\n                }\n            */\n          var subject = UI.utils.getAbout(\n            kb,\n            UI.utils.ancestor(selectedTd, 'TABLE').parentNode\n          )\n          var subjectClass = kb.any(subject, rdf('type'))\n          var sparqlText = []\n          const endl = '.\\n'\n          sparqlText[0] =\n            'SELECT ?pred WHERE{\\n?pred ' +\n            rdf('type') +\n            rdf('Property') +\n            '.\\n' +\n            '?pred ' +\n            UI.ns.rdfs('domain') +\n            subjectClass +\n            '.}' // \\n is required? SPARQL parser bug?\n          sparqlText[1] =\n            'SELECT ?pred ?class\\nWHERE{\\n' +\n            '?pred ' +\n            rdf('type') +\n            rdf('Property') +\n            '.\\n' +\n            subjectClass +\n            UI.ns.rdfs('subClassOf') +\n            ' ?class.\\n' +\n            '?pred ' +\n            UI.ns.rdfs('domain') +\n            ' ?class.\\n}'\n          sparqlText[2] =\n            'SELECT ?pred WHERE{\\n' +\n            subject +\n            rdf('type') +\n            kb.variable('subjectClass') +\n            endl +\n            kb.variable('pred') +\n            UI.ns.rdfs('domain') +\n            kb.variable('subjectClass') +\n            endl +\n            '}'\n          predicateQuery = sparqlText.map($rdf.SPARQLToQuery)\n        } else {\n          // ------selector\n          /* SELECT ?pred\n               WHERE{\n                   ?pred a rdf:Property.\n                   ?pred rdfs:domain subjectClass.\n                   ?pred rdfs:range objectClass.\n               }\n            */\n          // Candidate\n          /* SELECT ?pred\n               WHERE{\n                   subject a ?subjectClass.\n                   object a ?objectClass.\n                   ?pred rdfs:domain ?subjectClass.\n                   ?pred rdfs:range ?objectClass.\n            */\n          subject = UI.utils.getAbout(\n            kb,\n            UI.utils.ancestor(selectedTd, 'TABLE').parentNode\n          )\n          subjectClass = kb.any(subject, rdf('type'))\n          const object = selectedTd.parentNode.AJAR_statement.object\n          // var objectClass = (object.termType === 'Literal') ? UI.ns.rdfs('Literal') : kb.any(object, rdf('type'))\n          // var sparqlText=\"SELECT ?pred WHERE{\\n?pred \"+rdf('type')+rdf('Property')+\".\\n\"+\n          //               \"?pred \"+UI.ns.rdfs('domain')+subjectClass+\".\\n\"+\n          //               \"?pred \"+UI.ns.rdfs('range')+objectClass+\".\\n}\"; // \\n is required? SPARQL parser bug?\n          sparqlText =\n            'SELECT ?pred WHERE{' +\n            subject +\n            rdf('type') +\n            '?subjectClass' +\n            '.\\n' +\n            object +\n            rdf('type') +\n            '?objectClass' +\n            '.\\n' +\n            '?pred ' +\n            UI.ns.rdfs('domain') +\n            '?subjectClass' +\n            '.\\n' +\n            '?pred ' +\n            UI.ns.rdfs('range') +\n            '?objectClass' +\n            '.\\n}' // \\n is required? SPARQL parser bug?\n          predicateQuery = $rdf.SPARQLToQuery(sparqlText)\n        }\n\n        // -------presenter\n        // ToDo: how to sort selected predicates?\n        this.showMenu(e, 'GeneralPredicateChoice', predicateQuery, {\n          isPredicate: isPredicate,\n          selectedTd: selectedTd\n        })\n      } else {\n        // objectTd\n        const predicateTerm = selectedTd.parentNode.AJAR_statement.predicate\n        if (\n          kb.whether(\n            predicateTerm,\n            rdf('type'),\n            UI.ns.owl('DatatypeProperty')\n          ) ||\n          predicateTerm.termType === 'Collection' ||\n          kb.whether(predicateTerm, UI.ns.rdfs('range'), UI.ns.rdfs('Literal'))\n        ) {\n          selectedTd.className = ''\n          UI.utils.emptyNode(selectedTd)\n          this.lastModified = this.createInputBoxIn(\n            selectedTd,\n            ' (Please Input) '\n          )\n          this.lastModified.isNew = false\n\n          this.lastModified.select()\n        }\n\n        // show menu for rdf:type\n        if (\n          selectedTd.parentNode.AJAR_statement.predicate.sameTerm(rdf('type'))\n        ) {\n          const sparqlText =\n            'SELECT ?class WHERE{?class ' +\n            rdf('type') +\n            UI.ns.rdfs('Class') +\n            '.}'\n          // I should just use kb.each\n          const classQuery = $rdf.SPARQLToQuery(sparqlText)\n          this.showMenu(e, 'TypeChoice', classQuery, {\n            isPredicate: isPredicate,\n            selectedTd: selectedTd\n          })\n        }\n      }\n    },\n\n    // This is where pubsPane.js comes in, with: outline.UserInput.getAutoCompleteHandler(\"JournalTAC\")(e);\n    getAutoCompleteHandler: function getAutoCompleteHandler (mode) {\n      qp('\\n\\n***** In getAutoCompleteHandler ****** mode = ' + mode)\n      if (mode === 'PredicateAutoComplete') {\n        mode = 'predicate'\n      } else if (mode !== 'JournalTAC') {\n        // hq  // why? -tim  - not 'predicate' below\n        mode = 'all'\n      }\n\n      let InputBox\n      if (mode === 'JournalTAC') {\n        // hq  // Better to pass in InputBox as a param\n        InputBox = myDocument.getElementById('inpid_journal_title')\n      } else {\n        InputBox = this.lastModified || outline.getSelection()[0].firstChild\n      }\n      qp('InputBox=' + InputBox) // hq\n      qp('InputBox.value=' + InputBox.value) // hq\n\n      return function (enterEvent) {\n        qp('ENTER EVENT=' + enterEvent)\n        // Firefox 2.0.0.6 makes this not working? 'this' becomes [object HTMLInputElement]\n        //                                           but not [wrapped ...]\n        // var InputBox=(typeof enterEvent=='object')?this:this.lastModified;//'this' is the <input> element\n        qp('1. outside (if eneterEvent)')\n        const e = {}\n        const tdNode = InputBox.parentNode\n        if (!mode) mode = tdNode.nextSibling ? 'predicate' : 'all'\n        e.pageX = UI.utils.findPos(tdNode)[0]\n        e.pageY = UI.utils.findPos(tdNode)[1] + tdNode.clientHeight\n        qp('epX=' + e.pageX + ', epY=' + e.pageY + ', mode=' + mode)\n        let menu = myDocument.getElementById(outline.UserInput.menuID)\n        function setHighlightItem (item) {\n          if (!item) return // do not make changes\n          if (menu.lastHighlight) menu.lastHighlight.className = ''\n          menu.lastHighlight = item\n          menu.lastHighlight.className = 'activeItem'\n          outline.showURI(UI.utils.getAbout(kb, menu.lastHighlight))\n        }\n        if (enterEvent) {\n          // either the real event of the pseudo number passed by OutlineKeypressPanel\n          qp('2. in (if enterEvent).  with type = ' + typeof enterEvent)\n          let newText = InputBox.value\n\n          if (typeof enterEvent === 'object') {\n            qp(\n              '3. in typeof enterEvent is object, will switch to keys, arrows, etc. keycode = ' +\n                enterEvent.keyCode\n            )\n            enterEvent.stopPropagation()\n            if (menu && !menu.lastHighlight) {\n              // this ensures the following operation valid\n              setHighlightItem(menu.firstChild.firstChild)\n            }\n            switch (enterEvent.keyCode) {\n              case 13: // enter\n              case 9: // tab\n                qp('handler: Enter or Tab')\n                if (!menu) {\n                  outline.UserInput.clearInputAndSave()\n                  return\n                }\n                if (!menu.lastHighlight) {\n                  if (mode === 'JournalTAC') {\n                    outline.UserInput.clearMenu()\n                    qp('no lastH')\n                    return 'no lastH'\n                  }\n                  return\n                } // warning?\n\n                if (menu.lastHighlight.tagName === 'INPUT') {\n                  switch (menu.lastHighlight.value) {\n                    case 'New...':\n                      qp('subcase New')\n                      outline.UserInput.createNew()\n                      break\n                    case 'GiveURI':\n                      qp('subcase GiveURI')\n                      outline.UserInput.inputURI()\n                      break\n                  }\n                } else {\n                  // pubsPane Stuff:\n                  if (mode === 'JournalTAC') {\n                    qp('movedArrow? ' + movedArrow)\n                    // Enter only works if arrows have been moved\n                    if (movedArrow && menu.lastHighlight) {\n                      // Get the title from the DOM\n                      // tr, th, div, innerHTML\n                      const jtitle =\n                        menu.lastHighlight.firstChild.firstChild.innerHTML\n                      // tr, th, td, innerHTML\n                      let juri =\n                        menu.lastHighlight.firstChild.nextSibling.innerHTML\n                      // clearing out the &lt; and &gt; from juri\n                      juri = juri.slice(4, -4)\n                      return ['gotdptitle', jtitle, juri]\n                    }\n                    // If doesn't qualify to be autocomplete, return this random string, since pubsPane checks for \"gotdptitle\"\n                    return 'asGivenTxt'\n                  }\n\n                  const inputTerm = UI.utils.getAbout(kb, menu.lastHighlight)\n                  const fillInType = mode === 'predicate' ? 'predicate' : 'object'\n                  outline.UserInput.clearMenu()\n                  outline.UserInput.fillInRequest(\n                    fillInType,\n                    InputBox.parentNode,\n                    inputTerm\n                  )\n                  // if (outline.UserInput.fillInRequest(fillInType,InputBox.parentNode,inputTerm))\n                  //    outline.UserInput.clearMenu();\n                }\n                qp('outside')\n                return\n              case 38: // up\n                qp('handler: Arrow UP')\n                movedArrow = true // hq\n                if (\n                  newText === '' &&\n                  menu.lastHighlight.tagName === 'TR' &&\n                  !menu.lastHighlight.previousSibling\n                ) {\n                  setHighlightItem(menu.firstChild.firstChild)\n                } else {\n                  setHighlightItem(menu.lastHighlight.previousSibling)\n                }\n                return \"I'm a little Arrow Up\"\n              case 40: // down\n                qp('handler: Arrow Down')\n                movedArrow = true // hq\n                if (menu.lastHighlight.tagName === 'INPUT') {\n                  setHighlightItem(menu.childNodes[1].firstChild)\n                } else {\n                  setHighlightItem(menu.lastHighlight.nextSibling)\n                }\n                return \"I'm a little Down Arrow\"\n              case 37: // left\n              case 39: // right\n                qp('handler: Arrow left, right')\n                if (menu.lastHighlight.tagName === 'INPUT') {\n                  if (enterEvent.keyCode === 37) {\n                    setHighlightItem(menu.lastHighlight.previousSibling)\n                  } else {\n                    setHighlightItem(menu.lastHighlight.nextSibling)\n                  }\n                }\n                return\n              case 8: // backspace\n                qp('handler: Backspace')\n                newText = newText.slice(0, -1)\n                break\n              case 27: // esc to enter literal\n                qp('handler: Esc')\n                if (!menu) {\n                  outline.UserInput.backOut()\n                  return\n                }\n                outline.UserInput.clearMenu()\n                // Not working? I don't know.\n                // InputBox.removeEventListener('keypress',outline.UserInput.Autocomplete,false);\n                return\n              // break\n              default:\n                qp('handler: Default')\n                movedArrow = false // hq\n                // we need this because it is keypress, seeAlso performAutoCompleteEdit\n                qp('oldtext=' + newText)\n                newText += String.fromCharCode(enterEvent.charCode)\n                qp('charcodent=' + enterEvent.charCode)\n                qp('strcharcod=' + String.fromCharCode(enterEvent.charCode))\n                console.log('DEFAULT txtstr=' + newText + '\\n') // hq\n            }\n          } // endif typeof(event) === object\n\n          // UI.log.warn(InputBox.choices.length);\n          // for(i=0;InputBox.choices[i].label<newText;i++); //O(n) ToDo: O(log n)\n          if (mode === 'all') {\n            qp('generalAC after switch, newText=' + newText + 'mode is all')\n            outline.UserInput.clearMenu()\n            // outline.UserInput.showMenu(e,'GeneralAutoComplete',undefined,{'isPredicate':false,'selectedTd':tdNode,'choices':InputBox.choices, 'index':i});\n            outline.UserInput.showMenu(e, 'GeneralAutoComplete', undefined, {\n              inputText: newText,\n              selectedTd: tdNode\n            })\n            if (newText.length === 0) outline.UserInput.WildCardButtons()\n          } else if (mode === 'predicate') {\n            qp(\n              'predicateAC after switch, newText=' +\n                newText +\n                'mode is predicate'\n            )\n            outline.UserInput.clearMenu()\n            outline.UserInput.showMenu(e, 'PredicateAutoComplete', undefined, {\n              inputText: newText,\n              isPredicate: true,\n              selectedTd: tdNode\n            })\n          } else if (mode === 'JournalTAC') {\n            // hq\n            qp('JouralTAC after switch, newText=' + newText)\n            outline.UserInput.clearMenu()\n            // Goto showMenu\n            outline.UserInput.showMenu(\n              e,\n              'JournalTitleAutoComplete',\n              undefined,\n              { inputText: newText },\n              'orderisuseless'\n            )\n          }\n          menu = myDocument.getElementById(outline.UserInput.menuID)\n          if (!menu) {\n            qp('No menu element.  Do not show menu.')\n            return\n          }\n          qp('at end of handler\\n^^^^^^^^^^^^^^^^^\\n\\n')\n          setHighlightItem(menu.firstChild.firstChild)\n          outline.showURI(UI.utils.getAbout(kb, menu.lastHighlight))\n          return 'nothing to return'\n        }\n      } // end of return function\n    },\n\n    // Add the buttons which allow the suer to craete a new object\n    // Or reference an exiting one with a URI.\n    //\n    WildCardButtons: function WildCardButtons () {\n      const menuDiv = myDocument.getElementById(outline.UserInput.menuID)\n      const div = menuDiv.insertBefore(\n        myDocument.createElement('div'),\n        menuDiv.firstChild\n      )\n      const input1 = div.appendChild(myDocument.createElement('input'))\n      const input2 = div.appendChild(myDocument.createElement('input'))\n      input1.type = 'button'\n      input1.value = 'New...'\n      input2.type = 'button'\n      input2.value = 'Know its URI'\n\n      function highlightInput (e) {\n        // same as the one in newMenu()\n        const menu = myDocument.getElementById(outline.UserInput.menuID)\n        if (menu.lastHighlight) menu.lastHighlight.className = ''\n        menu.lastHighlight = UI.utils.ancestor(UI.utils.getTarget(e), 'INPUT')\n        if (!menu.lastHighlight) return // mouseover <TABLE>\n        menu.lastHighlight.className = 'activeItem'\n      }\n      div.addEventListener('mouseover', highlightInput, false)\n      input1.addEventListener('click', this.createNew, false)\n      input2.addEventListener('click', this.inputURI, false)\n    },\n    // ToDo: shrink rows when \\n+backspace\n    Keypress: function (e) {\n      if (e.keyCode === 13) {\n        if (outline.targetOf(e).tagName !== 'TEXTAREA') {\n          this.clearInputAndSave()\n        } else {\n          // <TEXTAREA>\n          const preRows = parseInt(this.lastModified.getAttribute('rows'))\n          this.lastModified.setAttribute('rows', (preRows + 1).toString())\n          e.stopPropagation()\n        }\n      }\n      // Remark by Kenny: If the user wants to input more lines into an one-line-only blank.\n      //                 Direct him/her to a new blank (how?)\n    },\n\n    Mousedown: function (e) {\n      qp('MOUSING DOWN')\n      // temporary key ctrl+s or q for swiching mode\n      // This was in HCIOptions \"right click to switch mode\":\n      window.addEventListener(\n        'keypress',\n        function (e) {\n          if (e.ctrlKey && (e.charCode === 115 || e.charCode === 113)) {\n            UserInput.switchMode()\n          }\n        },\n        false\n      )\n      window.addEventListener('mousedown', UserInput.Mousedown, false)\n      document.getElementById('outline').oncontextmenu = function () {\n        return false\n      }\n\n      if (e.button === 2) {\n        // right click\n        UserInput.switchMode()\n        if (e) {\n          e.preventDefault()\n          e.stopPropagation()\n        }\n      }\n    },\n\n    Mouseover: function Mouseover (e) {\n      this.className = 'bottom-border-active'\n      if (this._tabulatorMode === 1) {\n        switch (UI.utils.getTarget(e).tagName) {\n          case 'TD':\n            var preTd = UI.utils.getTarget(e)\n            if (preTd.className === 'pred') preTd.style.cursor = 'copy'\n            break\n          // Uh...I think I might have to give up this\n          case 'DIV':\n            var border = UI.utils.getTarget(e)\n            if (UI.utils.getTarget(e).className === 'bottom-border') {\n              border.style.borderColor = 'rgb(100%,65%,0%)'\n              border.style.cursor = 'copy'\n            }\n            break\n          default:\n        }\n      }\n    },\n\n    Mouseout: function (e) {\n      this.className = 'bottom-border'\n      if (this._tabulatorMode === 1) {\n        const border = UI.utils.getTarget(e)\n        if (UI.utils.getTarget(e).className === 'bottom-border') {\n          border.style.borderColor = 'transparent'\n          border.style.cursor = 'auto'\n        }\n      }\n    },\n\n    /**\n     * Utilities\n     */\n\n    whatSortOfEditCell: function whatSortOfEditCell (selectedTd) {\n      if (selectedTd.nextSibling) return 'predicate'\n      const predicateTerm = this.getStatementAbout(selectedTd).predicate\n      // var predicateTerm=selectedTd.parentNode.AJAR_statement.predicate;\n      if (\n        kb.whether(\n          predicateTerm,\n          UI.ns.rdf('type'),\n          UI.ns.owl('DatatypeProperty')\n        ) ||\n        kb.whether(predicateTerm, UI.ns.rdfs('range'), UI.ns.rdfs('Literal')) ||\n        predicateTerm.termType === 'Collection'\n      ) {\n        return 'DatatypeProperty-like'\n      } else if (\n        kb.whether(predicateTerm, rdf('type'), UI.ns.owl('ObjectProperty'))\n      ) {\n        return 'ObjectProperty-like'\n      } else {\n        return 'no-idea'\n      }\n    },\n\n    getStatementAbout: function getStatementAbout (something) {\n      // var trNode=something.parentNode;\n      const trNode = UI.utils.ancestor(something, 'TR')\n      if (!trNode) {\n        throw new Error('No ancestor TR for the TD we clicked on:' + something)\n      }\n      try {\n        var statement = trNode.AJAR_statement\n      } catch (e) {\n        throw new Error(\n          'No AJAR_statement!' +\n            something +\n            something.textContent +\n            ' has ancestor ' +\n            trNode\n        ) // was commented out @@\n        // throw 'TR not a statement TR' // was commented out @@\n      }\n      // Set last modified here, I am not sure this will be ok.\n      this.lastModifiedStat = trNode.AJAR_statement\n      this.statIsInverse = trNode.AJAR_inverse\n\n      return statement\n    },\n\n    createInputBoxIn: function createInputBoxIn (tdNode, defaultText) {\n      function UpAndDown (e) {\n        if (e.keyCode === 38 || e.keyCode === 40) {\n          outline.OutlinerKeypressPanel(e)\n          outline.UserInput.clearInputAndSave()\n        }\n      }\n      UI.log.info(\n        'myDocument in createInputBoxIn is now ' + myDocument.location\n      )\n      UI.log.info('outline.document is now ' + outline.document.location)\n      const inputBox = myDocument.createElement('input')\n      inputBox.setAttribute('value', defaultText)\n      inputBox.setAttribute('class', 'textinput')\n      // inputBox.setAttribute('size','100');//should be the size of <TD>\n      if (tdNode.className !== 'undetermined selected') {\n        inputBox.setAttribute('size', '100') // should be the size of <TD>\n        inputBox.addEventListener('keypress', UpAndDown, false)\n      }\n      tdNode.appendChild(inputBox)\n      return inputBox\n    },\n\n    // called when 'New...' is clicked(eventlistener) or enter is pressed while 'New...' is highlighted\n    createNew: function createNew (_e) {\n      outline.UserInput.clearMenu()\n      const selectedTd = outline.getSelection()[0]\n      const targetdoc = selectedTd.parentNode.AJAR_statement.why\n      const newTerm = kb.nextSymbol(targetdoc)\n      outline.UserInput.fillInRequest('object', selectedTd, newTerm)\n      // selection is changed\n      outline.outlineExpand(outline.getSelection()[0], newTerm)\n    },\n\n    inputURI: function inputURI (_e) {\n      const This = outline.UserInput\n      This.clearMenu()\n      const selectedTd = outline.getSelection()[0]\n      UI.utils.emptyNode(selectedTd)\n      const tiptext = ' (Type a URI) '\n      This.lastModified = This.createInputBoxIn(selectedTd, tiptext)\n      This.lastModified.select()\n      function typeURIhandler (e) {\n        e.stopPropagation()\n        switch (e.keyCode) {\n          case 13: // enter\n          case 9: // tab\n            // this is input box\n            if (this.value !== tiptext) {\n              const newuri = this.value // @@ Removed URI \"fixup\" code\n              This.fillInRequest('object', selectedTd, kb.sym(newuri))\n            }\n        }\n      }\n      This.lastModified.addEventListener('keypress', typeURIhandler, false)\n      /*\n        if (false && UI.isExtension){\n            var selectedTd = outline.getSelection()[0];\n            emptyNode(selectedTd);\n            var textbox = myDocument.createElementNS(kXULNS,'textbox');\n            textbox.setAttribute('type','autocomplete');\n            textbox.setAttribute('autocompletesearch','history');\n            selectedTd.appendChild(textbox);\n\n            urlbar = gURLBar.cloneNode(false);\n            selectedTd.appendChild(urlbar);\n            urlbar.mController = gURLBar.mController;\n\n        }\n        */\n    },\n\n    appendToPredicate: function appendToPredicate (predicateTd) {\n      let isEnd = false\n      let trIterator\n      try {\n        for (\n          trIterator = predicateTd.parentNode.nextSibling;\n          trIterator.childNodes.length === 1 && trIterator.AJAR_statement;\n          // number of nodes as condition, also beware of toggle Trs that don't have AJAR_statement\n          trIterator = trIterator.nextSibling\n        ) {\n          // ..\n        }\n      } catch (e) {\n        isEnd = true\n      }\n      // if(!isEnd && HCIoptions[\"bottom insert highlights\"].enabled) trIterator=trIterator.previousSibling;\n\n      const insertTr = myDocument.createElement('tr')\n      // style stuff, I'll have to investigate appendPropertyTRs() somehow\n      insertTr.style.colspan = '1'\n      insertTr.style.display = 'block'\n\n      insertTr.style.display = ''\n      if (predicateTd.hasAttribute('rowspan')) {\n        predicateTd.setAttribute(\n          'rowspan',\n          parseInt(predicateTd.getAttribute('rowspan')) + 1\n        )\n      }\n\n      if (!predicateTd.hasAttribute('rowspan')) {\n        predicateTd.setAttribute('rowspan', '2')\n      }\n\n      if (!isEnd) {\n        trIterator.parentNode.insertBefore(insertTr, trIterator)\n      } else {\n        const table = predicateTd.parentNode.parentNode\n        if (table.className === 'defaultPane') {\n          table.insertBefore(insertTr, table.lastChild)\n        } else {\n          table.appendChild(insertTr)\n        }\n      }\n\n      return insertTr\n    },\n\n    bnode2symbol: function bnode2symbol (bnode, symbol) {\n      kb.copyTo(bnode, symbol, ['two-direction', 'delete'])\n    },\n\n    generateRequest: function generateRequest (\n      tipText,\n      trNew,\n      isPredicate,\n      notShow\n    ) {\n      let trNode\n      if (!notShow) {\n        if (trNew) {\n          trNode = trNew\n        } else {\n          trNode = UI.utils.ancestor(this.lastModified, 'TR')\n        }\n        UI.utils.emptyNode(trNode)\n      }\n\n      // create the undetermined term\n      // Choice 1:\n      // var reqTerm=kb.literal(\"TBD\");\n      // this is troblesome since RDFIndexedFormula does not allow me to add <x> <y> \"TBD\". twice\n      // Choice 2: Use a variable.\n      // Agreed. Kenny wonders whether there is RDF/XML representation of a variable.\n      // labelPriority[UI.ns.link('message').uri] = 20;\n\n      // We must get rid of this clutter in the store. \"OK, will be stroed in a seperate formula to avoid bugs\", Kenny says\n      const tp = TempFormula\n      const reqTerm = tp.bnode()\n      tp.add(reqTerm, UI.ns.rdf('type'), UI.ns.link('Request'))\n      if (tipText.length < 10) {\n        tp.add(reqTerm, UI.ns.link('message'), tp.literal(tipText))\n      } else {\n        tp.add(reqTerm, UI.ns.link('message'), tp.literal(tipText))\n      }\n      tp.add(reqTerm, UI.ns.link('to'), tp.literal('The User'))\n      tp.add(reqTerm, UI.ns.link('from'), tp.literal('The User'))\n\n      // append the undetermined td\n      if (!notShow) {\n        let newNode\n        if (isPredicate) {\n          newNode = trNode.appendChild(\n            outline.outlinePredicateTD(reqTerm, trNode, false, false)\n          )\n        } else {\n          newNode = trNode.appendChild(outline.outlineObjectTD(reqTerm))\n        }\n        newNode.className = 'undetermined'\n        newNode.textContent = tipText\n      }\n\n      return reqTerm\n    },\n\n    showMenu: function showMenu (\n      e,\n      menuType,\n      inputQuery,\n      extraInformation,\n      _order\n    ) {\n      // ToDo:order, make a class?\n      UI.log.info('myDocument is now ' + myDocument.location)\n      UI.log.info('outline.doucment is now ' + outline.document.location)\n      const This = this\n      const menu = myDocument.createElement('div')\n      qp('\\n**** In showMenu, menuType = ' + menuType + '\\n')\n      if (extraInformation) {\n        for (const x in extraInformation) {\n          console.log('\\t extra ' + x + ': ' + extraInformation[x] + '\\n')\n        }\n      }\n      console.log('CREATED MENU\\n') // hq\n      menu.id = this.menuID\n      menu.className = 'outlineMenu'\n      // menu.addEventListener('click',false);\n      menu.style.top = e.pageY + 'px'\n      menu.style.left = e.pageX + 'px'\n\n      /// /For pubsPane\n      // This is for setting the location of the dropdown menu, because\n      // JournalTitleAutoComplete is called with a keypress, and not mouse actions\n      // Get Offset of an HTML element\n      const getOffset = function getOffset (el) {\n        let _lf = 0\n        let _tp = 0\n        let oldlf = 0\n        let oldtp = 0\n        let newlf = 0\n        let newtp = 0\n\n        // repeatedly get ancestor's positions\n        // TODO: STILL a small offset/bug\n        while (el && !isNaN(el.offsetLeft) && !isNaN(el.offsetTop)) {\n          newlf = el.offsetLeft\n          newtp = el.offsetTop\n\n          // only change if the new parent's offset is different\n          if (newlf !== oldlf) {\n            _lf += el.offsetLeft - el.scrollLeft\n          }\n          if (newtp !== oldtp) {\n            _tp += el.offsetTop - el.scrollTop\n          }\n\n          oldlf = newlf\n          oldtp = newtp\n\n          el = el.parentNode\n        }\n        // there is a constant offset\n        return { top: _tp + 54, left: _lf - 38 }\n      }\n      // Change the position of menu in pubsPane's journal Title AC\n      if (menuType === 'JournalTitleAutoComplete') {\n        // hql\n        const loc = getOffset(myDocument.getElementById('inpid_journal_title'))\n        loc.left -= myDocument.getElementById('inpid_journal_title').scrollTop\n        menu.style.top = loc.top + 'px'\n        menu.style.left = loc.left + 'px'\n      }\n      console.log(\n        'menu at top=' + menu.style.top + ' left=' + menu.style.left + '\\n'\n      ) // hql\n      // \\\\\\\\\\\\\\hql\n\n      myDocument.body.appendChild(menu)\n      const table = menu.appendChild(myDocument.createElement('table'))\n\n      menu.lastHighlight = null\n      function highlightTr (e) {\n        if (menu.lastHighlight) menu.lastHighlight.className = ''\n        menu.lastHighlight = UI.utils.ancestor(UI.utils.getTarget(e), 'TR')\n        if (!menu.lastHighlight) return // mouseover <TABLE>\n        menu.lastHighlight.className = 'activeItem'\n      }\n\n      table.addEventListener('mouseover', highlightTr, false)\n\n      // setting for action after selecting item\n      switch (menuType) {\n        case 'DidYouMeanDialog':\n          var selectItem = function selectItem (e) {\n            qp('DID YOU MEAN SELECT ITEM!!!!!')\n            const target = UI.utils.ancestor(UI.utils.getTarget(e), 'TR')\n            if (target.childNodes.length === 2 && target.nextSibling) {\n              // Yes\n              kb.add(bnodeTerm, IDpredicate, IDterm) // used to connect the two\n              outline.UserInput.clearMenu()\n            } else if (target.childNodes.length === 2) {\n              outline.UserInput.clearMenu()\n            }\n          }\n          break\n        case 'LimitedPredicateChoice':\n          var clickedTd = extraInformation.clickedTd\n          selectItem = function selectItem (e) {\n            qp('LIMITED P SELECT ITEM!!!!')\n            const selectedPredicate = UI.utils.getAbout(kb, UI.utils.getTarget(e))\n            const predicateChoices =\n              clickedTd.parentNode.AJAR_statement.predicate.elements\n            for (let i = 0; i < predicateChoices.length; i++) {\n              if (predicateChoices[i].sameTerm(selectedPredicate)) {\n                predicateChoices.unshift(predicateChoices.splice(i, 1)[0])\n              }\n            }\n            outline.UserInput.clearMenu()\n\n            // refresh the choice\n            const tr = clickedTd.parentNode\n            const newTd = outline.outlinePredicateTD(\n              tr.AJAR_statement.predicate,\n              tr\n            )\n            tr.insertBefore(newTd, clickedTd)\n            tr.removeChild(clickedTd)\n            This.lastModified.select()\n          }\n          break\n        case 'PredicateAutoComplete':\n        case 'GeneralAutoComplete':\n        case 'GeneralPredicateChoice':\n        case 'JournalTitleAutoComplete': // hql\n        case 'TypeChoice':\n          // Clickable menu\n          var isPredicate = extraInformation.isPredicate\n          var selectedTd = extraInformation.selectedTd\n          selectItem = function selectItem (e) {\n            qp('WOOHOO')\n            const inputTerm = UI.utils.getAbout(kb, UI.utils.getTarget(e))\n            qp('GENERAL SELECT ITEM!!!!!!=' + inputTerm)\n            qp('target=' + UI.utils.getTarget(e))\n            if (isPredicate) {\n              qp('1')\n              if (\n                outline.UserInput.fillInRequest(\n                  'predicate',\n                  selectedTd,\n                  inputTerm\n                )\n              ) {\n                qp('2')\n                outline.UserInput.clearMenu()\n              }\n            } else {\n              qp('3')\n              // thisInput.fillInRequest('object',selectedTd,inputTerm); //why is this not working?\n              if (\n                outline.UserInput.fillInRequest('object', selectedTd, inputTerm)\n              ) {\n                qp('4')\n                outline.UserInput.clearMenu()\n              }\n            }\n          }\n          break\n        default:\n          throw new Error('userinput: unexpected mode')\n      }\n      // hq: this line makes the menu clickable\n      table.addEventListener('click', selectItem, false)\n\n      // Add Items to the list\n      // build NameSpaces here from knowledge base\n      const NameSpaces = {}\n      // for each (ontology in ontologies)\n      kb.each(undefined, UI.ns.rdf('type'), UI.ns.owl('Ontology')).forEach(\n        function (ontology) {\n          const label = UI.utils.label(ontology)\n          if (!label) return\n          // this is like extracting metadata from URI. Maybe it's better not to take the abbrevs.\n          const match = label.value.match(/\\((.+?)\\)/)\n          if (match) {\n            NameSpaces[match[1]] = ontology.uri\n          } else {\n            NameSpaces[label.value] = ontology.uri\n          }\n        }\n      )\n      function addMenuItem (predicate) {\n        if (table.firstChild && table.firstChild.className === 'no-suggest') {\n          table.removeChild(table.firstChild)\n        }\n        const Label = UI.utils.predicateLabelForXML(predicate, false)\n        // Label = Label.slice(0,1).toUpperCase() + Label.slice(1);\n\n        if (!predicate.uri) return // bnode\n        let theNamespace = '??'\n        for (const name in NameSpaces) {\n          UI.log.debug(NameSpaces[name])\n          if (UI.rdf.Util.string_startswith(predicate.uri, NameSpaces[name])) {\n            theNamespace = name\n            break\n          }\n        }\n\n        const tr = table.appendChild(myDocument.createElement('tr'))\n        tr.setAttribute('about', predicate)\n        const th = tr.appendChild(myDocument.createElement('th'))\n        th.appendChild(myDocument.createElement('div')).appendChild(\n          myDocument.createTextNode(Label)\n        )\n        tr.appendChild(myDocument.createElement('td')).appendChild(\n          myDocument.createTextNode(theNamespace.toUpperCase())\n        )\n      }\n      function addPredicateChoice (selectedQuery) {\n        return function (bindings) {\n          const predicate = bindings[selectedQuery.vars[0]]\n          addMenuItem(predicate)\n        }\n      }\n      function clearMenu (e) {\n        This.clearMenu()\n        e.stopPropagation()\n      }\n      let inputText\n      switch (menuType) {\n        case 'DidYouMeanDialog':\n          var dialogTerm = extraInformation.dialogTerm\n          var bnodeTerm = extraInformation.bnodeTerm\n          // have to do style instruction passing\n          menu.style.width = 'auto'\n\n          var h1 = table.appendChild(myDocument.createElement('tr'))\n          var h1th = h1.appendChild(myDocument.createElement('th'))\n          h1th.appendChild(myDocument.createTextNode('Did you mean...'))\n          var plist = kb.statementsMatching(dialogTerm)\n          var i\n          for (i = 0; i < plist.length; i++) {\n            if (\n              kb.whether(\n                plist[i].predicate,\n                rdf('type'),\n                UI.ns.owl('InverseFunctionalProperty')\n              )\n            ) {\n              break\n            }\n          }\n          var IDpredicate = plist[i].predicate\n          var IDterm = kb.any(dialogTerm, plist[i].predicate)\n          var text =\n            UI.utils.label(dialogTerm) +\n            ' who has ' +\n            UI.utils.label(IDpredicate) +\n            ' ' +\n            IDterm +\n            '?'\n          var h2 = table.appendChild(myDocument.createElement('tr'))\n          var h2th = h2.appendChild(myDocument.createElement('th'))\n          h2th.appendChild(myDocument.createTextNode(text))\n          h1th.setAttribute('colspan', '2')\n          h2th.setAttribute('colspan', '2')\n          var ans1 = table.appendChild(myDocument.createElement('tr'))\n          ans1\n            .appendChild(myDocument.createElement('th'))\n            .appendChild(myDocument.createTextNode('Yes'))\n          ans1\n            .appendChild(myDocument.createElement('td'))\n            .appendChild(myDocument.createTextNode('BOOLEAN'))\n          var ans2 = table.appendChild(myDocument.createElement('tr'))\n          ans2\n            .appendChild(myDocument.createElement('th'))\n            .appendChild(myDocument.createTextNode('No'))\n          ans2\n            .appendChild(myDocument.createElement('td'))\n            .appendChild(myDocument.createTextNode('BOOLEAN'))\n          break\n        case 'PredicateAutoComplete': // Prompt user  for possible relationships for new data\n          inputText = extraInformation.inputText\n          /*   The labeller functionality code ahs been lost or dropped -- reinstate this? */\n          // @@ TODO: Write away the need for exception on next line\n          // eslint-disable-next-line no-case-declarations\n          const predicates = outline.labeller.searchAdv(\n            inputText,\n            undefined,\n            'predicate'\n          )\n          // @@ TODO: Write away the need for exception on next line\n          // eslint-disable-next-line no-case-declarations\n          let results = [] // @@ fixme\n          for (let i = 0; i < predicates.length; i++) {\n            const tempQuery = {}\n            tempQuery.vars = []\n            tempQuery.vars.push('Kenny')\n            const tempBinding = {}\n            tempBinding.Kenny = kb.fromNT(predicates[i].NT)\n            try {\n              addPredicateChoice(tempQuery)(tempBinding)\n            } catch (e) {\n              throw new Error(\"I'll deal with bnodes later...[Kenny]\" + e)\n            } // I'll deal with bnodes later...\n          }\n\n          // @@ TODO: Write away the need for exception on next line\n          // eslint-disable-next-line no-case-declarations\n          let entries = results[0]\n          if (entries.length === 0) {\n            console.log('cm length 0\\n') // hq\n            this.clearMenu()\n            return\n          }\n          for (let i = 0; i < entries.length && i < 10; i++) {\n            // do not show more than 30 items\n            addMenuItem(entries[i][1])\n          }\n          break\n        case 'GeneralAutoComplete':\n          inputText = extraInformation.inputText\n          try {\n            results = outline.labeller.search(inputText)\n          } catch (e) {\n            console.log(\n              'GeneralAutoComplete: debug me ' +\n                extraInformation.selectedTd.textContent +\n                '\\n' +\n                e +\n                '\\n'\n            )\n          }\n          entries = results[0] // [label, subject,priority]\n          var types = results[1]\n          if (entries.length === 0) {\n            console.log('cm length 0\\n') // hq\n            this.clearMenu()\n            return\n          }\n          for (let i = 0; i < entries.length && i < 10; i++) {\n            // do not show more than 30 items\n            // console.log(\"\\nGEN ENTRIES[\"+i+\"] = \"+entries[i]+\"\\n\");//hq\n            const thisNT = entries[i][1].toNT()\n            // console.log(\"thisNT=\"+thisNT+\"\\n\");\n            var tr = table.appendChild(myDocument.createElement('tr'))\n            tr.setAttribute('about', thisNT)\n            var th = tr.appendChild(myDocument.createElement('th'))\n            th.appendChild(myDocument.createElement('div')).appendChild(\n              myDocument.createTextNode(entries[i][0])\n            )\n            // var theTerm = entries[i][1]\n            // var type=theTerm?kb.any(kb.fromNT(thisNT),rdf('type')):undefined;\n            const type = types[i]\n            const typeLabel = type ? UI.utils.label(type) : ''\n            tr.appendChild(myDocument.createElement('td')).appendChild(\n              myDocument.createTextNode(typeLabel)\n            )\n          }\n          /* var choices=extraInformation.choices;\n                var index=extraInformation.index;\n                for (var i=index-10;i<index+20;i++){ //show 30 items\n                    if (i<0) i=0;\n                    if (i==choices.length) break;\n                    var thisNT=choices[i].NT;\n                    var tr=table.appendChild(myDocument.createElement('tr'));\n                    tr.setAttribute('about',thisNT);\n                    var th=tr.appendChild(myDocument.createElement('th'))\n                    th.appendChild(myDocument.createElement('div')).appendChild(myDocument.createTextNode(choices[i].label));\n                    var theTerm=kb.fromNT(thisNT);\n                    var type=theTerm?kb.any(kb.fromNT(thisNT),rdf('type')):undefined;\n                    var typeLabel=type?label(type):\"\";\n                    tr.appendChild(myDocument.createElement('td')).appendChild(myDocument.createTextNode(typeLabel));\n                }\n                */\n          break\n        case 'JournalTitleAutoComplete': // hql\n          // HEART OF JOURNAL TITLE AUTOCOMPLETE\n\n          // extraInformatin is from above getAutoCompleteHandler\n          inputText = extraInformation.inputText\n          console.log('testing searching text= ' + inputText + ' =====\\n')\n          console.log('\\n===start JournalTitleAutoComplete\\n')\n\n          // Gets all the URI's with type Journal in the knowledge base\n          var juris = kb.each(undefined, rdf('type'), bibo('Journal'))\n\n          var matchedtitle = [] // debugging display before inserts into menu\n\n          for (let i = 0; i < juris.length; i++) {\n            const juri = juris[i]\n            const jtitle = kb.each(juri, dcelems('title'), undefined)\n\n            const jtstr = jtitle + ''\n\n            const matchstr = inputText.toLowerCase()\n            const jTitleLowerCase = jtstr.toLowerCase()\n\n            // If the inputText as a whole is contained in a journal title\n            if (jTitleLowerCase.search(matchstr) !== -1) {\n              qp('FOUND A Journal Title Match!!!!!!')\n              matchedtitle.push(jtitle)\n\n              // Add it as a row to the menu:\n              // === Title, URI ==\n              const tr = table.appendChild(myDocument.createElement('tr'))\n              tr.setAttribute('about', 'journalTitle')\n              const th = tr.appendChild(myDocument.createElement('th'))\n              th.appendChild(myDocument.createElement('div')).appendChild(\n                myDocument.createTextNode(jtitle)\n              )\n              tr.appendChild(myDocument.createElement('td')).appendChild(\n                myDocument.createTextNode(juri)\n              )\n            }\n          }\n\n          console.log('matched: ' + matchedtitle + '\\n')\n\n          console.log(\"\\\\\\\\done showMenu's JTAutocomplete\\n\")\n          break\n        case 'LimitedPredicateChoice':\n          var choiceTerm = UI.utils.getAbout(kb, extraInformation.clickedTd)\n          // because getAbout relies on kb.fromNT, which does not deal with\n          // the 'Collection' termType. This termType is ambiguous anyway.\n          choiceTerm.termType = 'Collection'\n          var choices = kb.each(choiceTerm, UI.ns.link('element'))\n          for (let i = 0; i < choices.length; i++) {\n            addMenuItem(choices[i])\n          }\n          break\n        default:\n          tr = table.appendChild(myDocument.createElement('tr'))\n          tr.className = 'no-suggest'\n          th = tr.appendChild(myDocument.createElement('th'))\n          th.appendChild(myDocument.createElement('div')).appendChild(\n            myDocument.createTextNode(\n              'No suggested choices. Try to type instead.'\n            )\n          )\n          tr.appendChild(myDocument.createElement('td')).appendChild(\n            myDocument.createTextNode('OK')\n          )\n          // var This = this\n          tr.addEventListener('click', clearMenu, 'false')\n\n          var nullFetcher = function () {}\n          switch (inputQuery.constructor.name) {\n            case 'Array':\n              for (let i = 0; i < inputQuery.length; i++) {\n                kb.query(\n                  inputQuery[i],\n                  addPredicateChoice(inputQuery[i]),\n                  nullFetcher\n                )\n              }\n              break\n            case 'undefined':\n              throw new Error('addPredicateChoice: query is not defined')\n            // break\n            default:\n              kb.query(inputQuery, addPredicateChoice(inputQuery), nullFetcher)\n          }\n      }\n    }, // funciton showMenu\n\n    /* When a blank is filled. This happens even for blue-cross editing. */\n    fillInRequest: function fillInRequest (type, selectedTd, inputTerm) {\n      const tr = selectedTd.parentNode\n      let stat\n      let isInverse\n      // eslint-disable-next-line prefer-const\n      stat = tr.AJAR_statement\n      // eslint-disable-next-line prefer-const\n      isInverse = tr.AJAR_inverse\n\n      const reqTerm = type === 'object' ? stat.object : stat.predicate\n      let newStat\n      let doNext = false\n\n      // RDF Event\n\n      let eventhandler\n      if (kb.any(reqTerm, UI.ns.link('onfillin'))) {\n        /*    2017 -- Not sure what is supposed to happen here -- timbl @@@@\n        eventhandler = function(subject) {\n          return kb.any(reqTerm, UI.ns.link('onfillin')).value)\n        }\n        */\n      }\n\n      if (type === 'predicate') {\n        // ToDo: How to link two things with an inverse relationship\n        const newTd = outline.outlinePredicateTD(inputTerm, tr, false, false)\n        if (selectedTd.nextSibling.className !== 'undetermined') {\n          const s = new UI.rdf.Statement(\n            stat.subject,\n            inputTerm,\n            stat.object,\n            stat.why\n          )\n\n          try {\n            UI.store.updater.update([], [s], function (\n              uri,\n              success,\n              errorBody\n            ) {\n              if (success) {\n                newStat = kb.anyStatementMatching(\n                  stat.subject,\n                  inputTerm,\n                  stat.object,\n                  stat.why\n                )\n                tr.AJAR_statement = newStat\n                newTd.className = newTd.className.replace(/ pendingedit/g, '')\n              } else {\n                // outline.UserInput.deleteTriple(newTd,true);\n                // Warn the user that the write has failed.\n                UI.log.warn(\n                  'Failure occurs (#2) while inserting ' +\n                    tr.AJAR_statement +\n                    '\\n\\n' +\n                    errorBody\n                )\n              }\n            })\n          } catch (e) {\n            UI.log.error(e)\n            // Warn the user that the write has failed.\n            UI.log.warn(\n              'Error when insert (#2) of statement ' + s + ':\\n\\t' + e\n            )\n            return\n          }\n\n          newTd.className += ' pendingedit'\n          this.lastModified = null\n        } else {\n          this.formUndetStat(\n            tr,\n            stat.subject,\n            inputTerm,\n            stat.object,\n            stat.why,\n            false\n          )\n          outline.walk('right')\n          doNext = true\n        }\n        outline.replaceTD(newTd, selectedTd)\n        TempFormula.remove(stat)\n      } else if (type === 'object') {\n        // Object value has been edited\n        const newTd = outline.outlineObjectTD(inputTerm)\n        outline.replaceTD(newTd, selectedTd)\n        if (\n          !selectedTd.previousSibling ||\n          selectedTd.previousSibling.className !== 'undetermined'\n        ) {\n          let s\n          if (!isInverse) {\n            s = new UI.rdf.Statement(\n              stat.subject,\n              stat.predicate,\n              inputTerm,\n              stat.why\n            )\n          } else {\n            s = new UI.rdf.Statement(\n              inputTerm,\n              stat.predicate,\n              stat.object,\n              stat.why\n            )\n          }\n\n          try {\n            UI.store.updater.update([], [s], function (\n              uri,\n              success,\n              _errorBody\n            ) {\n              UI.log.info(\n                '@@ usinput.js (object) callback ok=' +\n                  success +\n                  ' for statement:' +\n                  s +\n                  '\\n '\n              )\n              let newStats\n              if (success) {\n                newTd.className = newTd.className.replace(/ pendingedit/g, '') // User feedback\n                if (!isInverse) {\n                  newStats = kb.statementsMatching(\n                    stat.subject,\n                    stat.predicate,\n                    inputTerm,\n                    stat.why\n                  )\n                } else {\n                  newStats = kb.statementsMatching(\n                    inputTerm,\n                    stat.predicate,\n                    stat.object,\n                    stat.why\n                  )\n                }\n                if (!newStats.length) {\n                  UI.log.error(\"userinput.js 1711: Can't find statememt!\")\n                }\n                tr.AJAR_statement = newStats[0]\n              } else {\n                UI.log.warn(\n                  'userinput.js (object): Fail trying to insert statement ' + s\n                )\n                // outline.UserInput.deleteTriple(newTd,true);\n              }\n            })\n          } catch (e) {\n            // outline.UserInput.deleteTriple(newTd,true);\n            UI.log.error(\n              'userinput.js (object): exception trying to insert statement ' +\n                s +\n                ': ' +\n                UI.utils.stackString(e)\n            )\n            UI.log.warn('Error trying to insert statement ' + s + ':\\n' + e)\n            return\n          }\n\n          this.lastModified = null\n          newTd.className += ' pendingedit'\n        } else {\n          // ?this.formUndetStat(tr...)\n          outline.walk('left')\n          doNext = true\n        }\n        // removal of the undetermined statement\n        TempFormula.remove(stat)\n      }\n      // do not throw away user's work even update fails\n      UserInputFormula.statements.push(newStat)\n      if (eventhandler) eventhandler(stat.subject)\n      if (doNext) {\n        this.startFillInText(outline.getSelection()[0])\n      } else {\n        return true\n      } // can clearMenu\n    },\n\n    formUndetStat: function formUndetStat (\n      trNode,\n      subject,\n      predicate,\n      object,\n      why,\n      inverse\n    ) {\n      trNode.AJAR_inverse = inverse\n      trNode.AJAR_statement = TempFormula.add(subject, predicate, object, why)\n      return trNode.AJAR_statement\n    }\n  }\n}\n"],"file":"userInput.js"}