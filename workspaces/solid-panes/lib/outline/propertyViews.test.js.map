{"version":3,"sources":["../../src/outline/propertyViews.test.ts"],"names":["describe","it","each","property","asImage","document","views","view","defaults","result","expect","toBeInstanceOf","HTMLImageElement","toHaveAttribute","HTMLAnchorElement"],"mappings":";;AACA;;AACA;;AACA;;;;AAHA;AAKAA,QAAQ,CAAC,gBAAD,EAAmB,YAAM;AAC/BC,EAAAA,EAAE,CAACC,IAAH,CAAQ,CACN,qCADM,EAEN,+BAFM,EAGN,qCAHM,EAIN,gCAJM,EAKN,yBALM,CAAR,EAMG,qBANH,EAM0B,UAACC,QAAD,EAAc;AACtC,QAAMC,OAAO,GAAG,6BAAYC,QAAZ,CAAhB;AACA,QAAMC,KAAK,GAAG,+BAAcD,QAAd,CAAd;AACA,QAAME,IAAI,GAAGD,KAAK,CAACE,QAAN,CAAeL,QAAf,CAAb;AACA,QAAMM,MAAM,GAAGF,IAAI,CAAC,iBAAI,6BAAJ,CAAD,CAAnB;AACAG,IAAAA,MAAM,CAACD,MAAD,CAAN,CAAeE,cAAf,CAA8BC,gBAA9B;AACAF,IAAAA,MAAM,CAACD,MAAD,CAAN,CAAeI,eAAf,CAA+B,KAA/B,EAAsC,6BAAtC;AACD,GAbD;AAeAZ,EAAAA,EAAE,CAACC,IAAH,CAAQ,CACN,gCADM,CAAR,EAEG,sBAFH,EAE2B,UAACC,QAAD,EAAc;AACvC,QAAMC,OAAO,GAAG,6BAAYC,QAAZ,CAAhB;AACA,QAAMC,KAAK,GAAG,+BAAcD,QAAd,CAAd;AACA,QAAME,IAAI,GAAGD,KAAK,CAACE,QAAN,CAAeL,QAAf,CAAb;AACA,QAAMM,MAAM,GAAGF,IAAI,CAAC,iBAAI,2BAAJ,CAAD,CAAnB;AACAG,IAAAA,MAAM,CAACD,MAAD,CAAN,CAAeE,cAAf,CAA8BG,iBAA9B;AACAJ,IAAAA,MAAM,CAACD,MAAD,CAAN,CAAeI,eAAf,CAA+B,MAA/B,EAAuC,2BAAvC;AACD,GATD;AAUD,CA1BO,CAAR","sourcesContent":["/* eslint-env jest */\nimport { sym } from 'rdflib'\nimport propertyViews from './propertyViews'\nimport viewAsImage from './viewAsImage'\n\ndescribe('property views', () => {\n  it.each([\n    'http://xmlns.com/foaf/0.1/depiction',\n    'http://xmlns.com/foaf/0.1/img',\n    'http://xmlns.com/foaf/0.1/thumbnail',\n    'http://xmlns.com/foaf/0.1/logo',\n    'http://schema.org/image'\n  ])('renders %s as image', (property) => {\n    const asImage = viewAsImage(document)\n    const views = propertyViews(document)\n    const view = views.defaults[property]\n    const result = view(sym('https://pod.example/img.jpg'))\n    expect(result).toBeInstanceOf(HTMLImageElement)\n    expect(result).toHaveAttribute('src', 'https://pod.example/img.jpg')\n  })\n\n  it.each([\n    'http://xmlns.com/foaf/0.1/mbox'\n  ])('renders %s as anchor', (property) => {\n    const asImage = viewAsImage(document)\n    const views = propertyViews(document)\n    const view = views.defaults[property]\n    const result = view(sym('mailto:alice@mail.example'))\n    expect(result).toBeInstanceOf(HTMLAnchorElement)\n    expect(result).toHaveAttribute('href', 'mailto:alice@mail.example')\n  })\n})\n"],"file":"propertyViews.test.js"}