{"version":3,"sources":["../src/dataContentPane.js"],"names":["UI","require","$rdf","ns","module","exports","icon","icons","originalIconBase","name","audience","solid","label","subject","context","session","store","findTypeURIs","n","statementsMatching","undefined","length","statementsAsTables","sts","initialRoots","myDocument","dom","rep","createElement","sz","rdf","Serializer","res","rootSubjects","roots","subjects","loopBreakers","x","console","log","doneBnodes","referencedBnodes","propertyTree","lastPred","toStr","appendChild","createTextNode","sort","same","predicateTD","i","st","tr","predicate","uri","setAttribute","anchor","addEventListener","widgets","openHrefInOutlineMode","utils","predicateLabelForXML","objectTD","objectTree","object","obj","termType","datatype","textContent","value","innerHTML","toNT","slice","newTable","ancestor","style","backgroundColor","elements","paneRegistry","byName","statements","Error","concat","filter","sameTerm","subjectTD","TDTree","root","bNT","table","insertBefore","firstChild","render","alternativeRendering","p","s2","div","plist","kb","outliner","appendPropertyTRs","_pred","_inverse","verticalAlign","td","outlineObjectTD","outlineExpand","pane","mainRendering","holds","push","ps","any","foaf","getOutliner","keepThisCodeForLaterButDisableFerossConstantConditionPolice"],"mappings":"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","sourcesContent":["/*      Data content Pane\n **\n **  This pane shows the content of a particular RDF resource\n ** or at least the RDF semantics we attribute to that resource.\n */\n\n// To do:  - Only take data from one graph\n//         - Only do forwards not backward?\n//         - Expand automatically all the way down\n//         - original source view?  Use ffox view source\n\nconst UI = require('solid-ui')\nconst $rdf = require('rdflib')\nconst ns = UI.ns\n\nmodule.exports = {\n  icon: UI.icons.originalIconBase + 'rdf_flyer.24.gif',\n\n  name: 'dataContents',\n\n  audience: [ns.solid('Developer')],\n\n  label: function (subject, context) {\n    if (\n      'http://www.w3.org/2007/ont/link#ProtocolEvent' in\n      context.session.store.findTypeURIs(subject)\n    ) {\n      return null\n    }\n    const n = context.session.store.statementsMatching(\n      undefined,\n      undefined,\n      undefined,\n      subject\n    ).length\n    if (n === 0) return null\n    return 'Data (' + n + ')'\n  },\n  /*\n  shouldGetFocus: function(subject) {\n      return UI.store.whether(subject, UI.ns.rdf('type'), UI.ns.link('RDFDocument'))\n  },\n*/\n  statementsAsTables: function statementsAsTables (sts, context, initialRoots) {\n    const myDocument = context.dom\n    // var outliner = context.getOutliner(myDocument)\n    const rep = myDocument.createElement('table')\n    const sz = UI.rdf.Serializer(context.session.store)\n    const res = sz.rootSubjects(sts)\n    let roots = res.roots\n    const subjects = res.subjects\n    const loopBreakers = res.loopBreakers\n    for (const x in loopBreakers) {\n      console.log('\\tdataContentPane: loopbreaker:' + x)\n    }\n    const doneBnodes = {} // For preventing looping\n    const referencedBnodes = {} // Bnodes which need to be named alas\n\n    // The property tree for a single subject or anonymous node\n    function propertyTree (subject) {\n      // print('Proprty tree for '+subject)\n      const rep = myDocument.createElement('table')\n      let lastPred = null\n      const sts = subjects[sz.toStr(subject)] // relevant statements\n      if (!sts) {\n        // No statements in tree\n        rep.appendChild(myDocument.createTextNode('...')) // just empty bnode as object\n        return rep\n      }\n      sts.sort()\n      let same = 0\n      let predicateTD // The cell which holds the predicate\n      for (let i = 0; i < sts.length; i++) {\n        const st = sts[i]\n        const tr = myDocument.createElement('tr')\n        if (st.predicate.uri !== lastPred) {\n          if (lastPred && same > 1) {\n            predicateTD.setAttribute('rowspan', '' + same)\n          }\n          predicateTD = myDocument.createElement('td')\n          predicateTD.setAttribute('class', 'pred')\n          const anchor = myDocument.createElement('a')\n          anchor.setAttribute('href', st.predicate.uri)\n          anchor.addEventListener(\n            'click',\n            UI.widgets.openHrefInOutlineMode,\n            true\n          )\n          anchor.appendChild(\n            myDocument.createTextNode(\n              UI.utils.predicateLabelForXML(st.predicate)\n            )\n          )\n          predicateTD.appendChild(anchor)\n          tr.appendChild(predicateTD)\n          lastPred = st.predicate.uri\n          same = 0\n        }\n        same++\n        const objectTD = myDocument.createElement('td')\n        objectTD.appendChild(objectTree(st.object))\n        tr.appendChild(objectTD)\n        rep.appendChild(tr)\n      }\n      if (lastPred && same > 1) predicateTD.setAttribute('rowspan', '' + same)\n      return rep\n    }\n\n    // Convert a set of statements into a nested tree of tables\n    function objectTree (obj) {\n      let res, anchor\n      switch (obj.termType) {\n        case 'NamedNode':\n          anchor = myDocument.createElement('a')\n          anchor.setAttribute('href', obj.uri)\n          anchor.addEventListener(\n            'click',\n            UI.widgets.openHrefInOutlineMode,\n            true\n          )\n          anchor.appendChild(myDocument.createTextNode(UI.utils.label(obj)))\n          return anchor\n\n        case 'Literal':\n          if (!obj.datatype || !obj.datatype.uri) {\n            res = myDocument.createElement('div')\n            res.setAttribute('style', 'white-space: pre-wrap;')\n            res.textContent = obj.value\n            return res\n          } else if (\n            obj.datatype.uri ===\n            'http://www.w3.org/1999/02/22-rdf-syntax-ns#XMLLiteral'\n          ) {\n            res = myDocument.createElement('div')\n            res.setAttribute('class', 'embeddedXHTML')\n            res.innerHTML = obj.value // Try that  @@@ beware embedded dangerous code\n            return res\n          }\n          return myDocument.createTextNode(obj.value) // placeholder - could be smarter,\n\n        case 'BlankNode':\n          if (obj.toNT() in doneBnodes) {\n            // Break infinite recursion\n            referencedBnodes[obj.toNT()] = true\n            const anchor = myDocument.createElement('a')\n            anchor.setAttribute('href', '#' + obj.toNT().slice(2))\n            anchor.setAttribute('class', 'bnodeRef')\n            anchor.textContent = '*' + obj.toNT().slice(3)\n            return anchor\n          }\n          doneBnodes[obj.toNT()] = true // Flag to prevent infinite recursion in propertyTree\n          var newTable = propertyTree(obj)\n          doneBnodes[obj.toNT()] = newTable // Track where we mentioned it first\n          if (\n            UI.utils.ancestor(newTable, 'TABLE') &&\n            UI.utils.ancestor(newTable, 'TABLE').style.backgroundColor ===\n              'white'\n          ) {\n            newTable.style.backgroundColor = '#eee'\n          } else {\n            newTable.style.backgroundColor = 'white'\n          }\n          return newTable\n\n        case 'Collection':\n          res = myDocument.createElement('table')\n          res.setAttribute('class', 'collectionAsTables')\n          for (let i = 0; i < obj.elements.length; i++) {\n            const tr = myDocument.createElement('tr')\n            res.appendChild(tr)\n            tr.appendChild(objectTree(obj.elements[i]))\n          }\n          return res\n        case 'Graph':\n          res = context.session.paneRegistry\n            .byName('dataContents')\n            .statementsAsTables(obj.statements, context)\n          res.setAttribute('class', 'nestedFormula')\n          return res\n        case 'Variable':\n          res = myDocument.createTextNode('?' + obj.uri)\n          return res\n      }\n      throw new Error('Unhandled node type: ' + obj.termType)\n    }\n\n    // roots.sort()\n\n    if (initialRoots) {\n      roots = initialRoots.concat(\n        roots.filter(function (x) {\n          for (let i = 0; i < initialRoots.length; i++) {\n            // Max 2\n            if (x.sameTerm(initialRoots[i])) return false\n          }\n          return true\n        })\n      )\n    }\n    for (let i = 0; i < roots.length; i++) {\n      const tr = myDocument.createElement('tr')\n      rep.appendChild(tr)\n      const subjectTD = myDocument.createElement('td')\n      tr.appendChild(subjectTD)\n      const TDTree = myDocument.createElement('td')\n      tr.appendChild(TDTree)\n      const root = roots[i]\n      if (root.termType === 'BlankNode') {\n        subjectTD.appendChild(myDocument.createTextNode(UI.utils.label(root))) // Don't recurse!\n      } else {\n        subjectTD.appendChild(objectTree(root)) // won't have tree\n      }\n      TDTree.appendChild(propertyTree(root))\n    }\n    for (const bNT in referencedBnodes) {\n      // Add number to refer to\n      const table = doneBnodes[bNT]\n      // let tr = myDocument.createElement('tr')\n      const anchor = myDocument.createElement('a')\n      anchor.setAttribute('id', bNT.slice(2))\n      anchor.setAttribute('class', 'bnodeDef')\n      anchor.textContent = bNT.slice(3) + ')'\n      table.insertBefore(anchor, table.firstChild)\n    }\n    return rep\n  }, // statementsAsTables\n  // View the data in a file in user-friendly way\n  render: function (subject, context) {\n    const myDocument = context.dom\n\n    function alternativeRendering () {\n      const sz = UI.rdf.Serializer(context.session.store)\n      const res = sz.rootSubjects(sts)\n      const roots = res.roots\n      const p = {}\n      p.render = function (s2) {\n        const div = myDocument.createElement('div')\n        div.setAttribute('class', 'withinDocumentPane')\n        const plist = kb.statementsMatching(s2, undefined, undefined, subject)\n        outliner.appendPropertyTRs(div, plist, false, function (\n          _pred,\n          _inverse\n        ) {\n          return true\n        })\n        return div\n      }\n      for (let i = 0; i < roots.length; i++) {\n        const tr = myDocument.createElement('TR')\n        const root = roots[i]\n        tr.style.verticalAlign = 'top'\n        const td = outliner.outlineObjectTD(root, undefined, tr)\n        tr.appendChild(td)\n        div.appendChild(tr)\n        outliner.outlineExpand(td, root, { pane: p })\n      }\n    }\n\n    function mainRendering () {\n      const initialRoots = [] // Ordering: start with stuff about this doc\n      if (kb.holds(subject, undefined, undefined, subject)) {\n        initialRoots.push(subject)\n      }\n      // Then about the primary topic of the document if any\n      const ps = kb.any(subject, UI.ns.foaf('primaryTopic'), undefined, subject)\n      if (ps) initialRoots.push(ps)\n      div.appendChild(\n        context.session.paneRegistry\n          .byName('dataContents')\n          .statementsAsTables(sts, context, initialRoots)\n      )\n    }\n\n    var outliner = context.getOutliner(myDocument)\n    var kb = context.session.store\n    var div = myDocument.createElement('div')\n    div.setAttribute('class', 'dataContentPane')\n    // Because of smushing etc, this will not be a copy of the original source\n    // We could instead either fetch and re-parse the source,\n    // or we could keep all the pre-smushed triples.\n    var sts = kb.statementsMatching(undefined, undefined, undefined, subject) // @@ slow with current store!\n\n    if ($rdf.keepThisCodeForLaterButDisableFerossConstantConditionPolice) {\n      alternativeRendering()\n    } else {\n      mainRendering()\n    }\n    return div\n  }\n}\n"],"file":"dataContentPane.js"}