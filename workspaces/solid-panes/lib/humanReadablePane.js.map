{"version":3,"sources":["../src/humanReadablePane.js"],"names":["UI","require","$rdf","module","exports","icon","icons","originalIconBase","name","label","subject","context","kb","session","store","ns","allowed","hasContentTypeIn","x","displayables","cts","fetcher","getHeader","j","length","k","indexOf","hasContentTypeIn2","t","findTypeURIs","Util","mediaTypeClass","uri","link","render","myDocument","dom","div","createElement","setAttribute","iframe","doc","ct","console","log","tr","appendChild"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA,IAAMA,EAAE,GAAGC,OAAO,CAAC,UAAD,CAAlB;;AACA,IAAMC,IAAI,GAAGD,OAAO,CAAC,QAAD,CAApB;;AAEAE,MAAM,CAACC,OAAP,GAAiB;AACfC,EAAAA,IAAI,EAAEL,EAAE,CAACM,KAAH,CAASC,gBAAT,GAA4B,6BADnB;AAGfC,EAAAA,IAAI,EAAE,eAHS;AAKfC,EAAAA,KAAK,EAAE,eAAUC,OAAV,EAAmBC,OAAnB,EAA4B;AACjC,QAAMC,EAAE,GAAGD,OAAO,CAACE,OAAR,CAAgBC,KAA3B;AACA,QAAMC,EAAE,GAAGf,EAAE,CAACe,EAAd,CAFiC,CAIjC;;AAEA,QAAMC,OAAO,GAAG,CACd,YADc,EAEd,WAFc,EAGd,uBAHc,EAId,WAJc,EAKd,YALc,EAMd,iBANc,EAOd,WAPc,CAAhB;;AAUA,QAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAUL,EAAV,EAAcM,CAAd,EAAiBC,YAAjB,EAA+B;AACtD,UAAMC,GAAG,GAAGR,EAAE,CAACS,OAAH,CAAWC,SAAX,CAAqBJ,CAArB,EAAwB,cAAxB,CAAZ;;AACA,UAAIE,GAAJ,EAAS;AACP,aAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,GAAG,CAACI,MAAxB,EAAgCD,CAAC,EAAjC,EAAqC;AACnC,eAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,YAAY,CAACK,MAAjC,EAAyCC,CAAC,EAA1C,EAA8C;AAC5C,gBAAIL,GAAG,CAACG,CAAD,CAAH,CAAOG,OAAP,CAAeP,YAAY,CAACM,CAAD,CAA3B,KAAmC,CAAvC,EAA0C;AACxC,qBAAO,IAAP;AACD;AACF;AACF;AACF;;AACD,aAAO,KAAP;AACD,KAZD,CAhBiC,CA8BjC;;;AACA,QAAME,iBAAiB,GAAG,SAApBA,iBAAoB,CAAUf,EAAV,EAAcM,CAAd,EAAiBC,YAAjB,EAA+B;AACvD,UAAMS,CAAC,GAAGhB,EAAE,CAACiB,YAAH,CAAgBnB,OAAhB,CAAV;;AACA,WAAK,IAAIe,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,YAAY,CAACK,MAAjC,EAAyCC,CAAC,EAA1C,EAA8C;AAC5C,YAAIvB,IAAI,CAAC4B,IAAL,CAAUC,cAAV,CAAyBZ,YAAY,CAACM,CAAD,CAArC,EAA0CO,GAA1C,IAAiDJ,CAArD,EAAwD;AACtD,iBAAO,IAAP;AACD;AACF;;AACD,aAAO,KAAP;AACD,KARD;;AAUA,QAAI,CAAClB,OAAO,CAACsB,GAAb,EAAkB,OAAO,IAAP,CAzCe,CAyCH;;AAE9B,QAAMJ,CAAC,GAAGhB,EAAE,CAACiB,YAAH,CAAgBnB,OAAhB,CAAV;AACA,QAAIkB,CAAC,CAACb,EAAE,CAACkB,IAAH,CAAQ,SAAR,EAAmBD,GAApB,CAAL,EAA+B,OAAO,MAAP;;AAE/B,QACEf,gBAAgB,CAACL,EAAD,EAAKF,OAAL,EAAcM,OAAd,CAAhB,IACAW,iBAAiB,CAACf,EAAD,EAAKF,OAAL,EAAcM,OAAd,CAFnB,EAGE;AACA,aAAO,MAAP;AACD;;AAED,WAAO,IAAP;AACD,GA3Dc;AA6DfkB,EAAAA,MAAM,EAAE,gBAAUxB,OAAV,EAAmBC,OAAnB,EAA4B;AAClC,QAAMwB,UAAU,GAAGxB,OAAO,CAACyB,GAA3B;AACA,QAAMC,GAAG,GAAGF,UAAU,CAACG,aAAX,CAAyB,KAAzB,CAAZ;AACA,QAAM1B,EAAE,GAAGD,OAAO,CAACE,OAAR,CAAgBC,KAA3B,CAHkC,CAKlC;;AACAuB,IAAAA,GAAG,CAACE,YAAJ,CAAiB,OAAjB,EAA0B,SAA1B;AACA,QAAMC,MAAM,GAAGL,UAAU,CAACG,aAAX,CAAyB,QAAzB,CAAf;AACAE,IAAAA,MAAM,CAACD,YAAP,CAAoB,KAApB,EAA2B7B,OAAO,CAACsB,GAAnC,EARkC,CAQM;;AACxCQ,IAAAA,MAAM,CAACD,YAAP,CAAoB,OAApB,EAA6B,KAA7B;AAEA,QAAMnB,GAAG,GAAGR,EAAE,CAACS,OAAH,CAAWC,SAAX,CAAqBZ,OAAO,CAAC+B,GAAR,EAArB,EAAoC,cAApC,CAAZ;AACA,QAAMC,EAAE,GAAGtB,GAAG,GAAGA,GAAG,CAAC,CAAD,CAAN,GAAY,IAA1B;;AACA,QAAIsB,EAAJ,EAAQ;AACNC,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAA4BF,EAAxC;AACD,KAFD,MAEO;AACLC,MAAAA,OAAO,CAACC,GAAR,CAAY,0CAAZ;AACD,KAjBiC,CAmBlC;AACA;AACA;AACA;AACA;AAEA;;;AAEAJ,IAAAA,MAAM,CAACD,YAAP,CAAoB,OAApB,EAA6B,2CAA7B,EA3BkC,CA4BlC;AACA;;AACA,QAAMM,EAAE,GAAGV,UAAU,CAACG,aAAX,CAAyB,IAAzB,CAAX;AACAO,IAAAA,EAAE,CAACC,WAAH,CAAeN,MAAf;AACAH,IAAAA,GAAG,CAACS,WAAJ,CAAgBD,EAAhB;AACA,WAAOR,GAAP;AACD;AA/Fc,CAAjB,C,CAiGA","sourcesContent":["/*   Human-readable Pane\n **\n **  This outline pane contains the document contents for an HTML document\n **  This is for peeking at a page, because the user might not want to leave the data browser.\n */\nconst UI = require('solid-ui')\nconst $rdf = require('rdflib')\n\nmodule.exports = {\n  icon: UI.icons.originalIconBase + 'tango/22-text-x-generic.png',\n\n  name: 'humanReadable',\n\n  label: function (subject, context) {\n    const kb = context.session.store\n    const ns = UI.ns\n\n    //   See also the source pane, which has lower precedence.\n\n    const allowed = [\n      'text/plain',\n      'text/html',\n      'application/xhtml+xml',\n      'image/png',\n      'image/jpeg',\n      'application/pdf',\n      'video/mp4'\n    ]\n\n    const hasContentTypeIn = function (kb, x, displayables) {\n      const cts = kb.fetcher.getHeader(x, 'content-type')\n      if (cts) {\n        for (let j = 0; j < cts.length; j++) {\n          for (let k = 0; k < displayables.length; k++) {\n            if (cts[j].indexOf(displayables[k]) >= 0) {\n              return true\n            }\n          }\n        }\n      }\n      return false\n    }\n\n    // This data could come from a fetch OR from ldp container\n    const hasContentTypeIn2 = function (kb, x, displayables) {\n      const t = kb.findTypeURIs(subject)\n      for (let k = 0; k < displayables.length; k++) {\n        if ($rdf.Util.mediaTypeClass(displayables[k]).uri in t) {\n          return true\n        }\n      }\n      return false\n    }\n\n    if (!subject.uri) return null // no bnodes\n\n    const t = kb.findTypeURIs(subject)\n    if (t[ns.link('WebPage').uri]) return 'view'\n\n    if (\n      hasContentTypeIn(kb, subject, allowed) ||\n      hasContentTypeIn2(kb, subject, allowed)\n    ) {\n      return 'View'\n    }\n\n    return null\n  },\n\n  render: function (subject, context) {\n    const myDocument = context.dom\n    const div = myDocument.createElement('div')\n    const kb = context.session.store\n\n    //  @@ When we can, use CSP to turn off scripts within the iframe\n    div.setAttribute('class', 'docView')\n    const iframe = myDocument.createElement('IFRAME')\n    iframe.setAttribute('src', subject.uri) // allow-same-origin\n    iframe.setAttribute('class', 'doc')\n\n    const cts = kb.fetcher.getHeader(subject.doc(), 'content-type')\n    const ct = cts ? cts[0] : null\n    if (ct) {\n      console.log('humanReadablePane: c-t:' + ct)\n    } else {\n      console.log('humanReadablePane: unknown content-type?')\n    }\n\n    // @@ Note below - if we set ANY sandbox, then Chrome and Safari won't display it if it is PDF.\n    // https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe\n    // You can;'t have any sandbox and allow plugins.\n    // We could sandbox only HTML files I suppose.\n    // HTML5 bug: https://lists.w3.org/Archives/Public/public-html/2011Jun/0330.html\n\n    // iframe.setAttribute('sandbox', 'allow-same-origin allow-forms'); // allow-scripts ?? no documents should be static\n\n    iframe.setAttribute('style', 'resize = both; height: 120em; width:80em;')\n    //        iframe.setAttribute('height', '480')\n    //        iframe.setAttribute('width', '640')\n    const tr = myDocument.createElement('TR')\n    tr.appendChild(iframe)\n    div.appendChild(tr)\n    return div\n  }\n}\n// ends\n"],"file":"humanReadablePane.js"}