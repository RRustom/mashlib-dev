{"version":3,"sources":["../src/n3Pane.js"],"names":["UI","require","ns","module","exports","icon","icons","originalIconBase","name","audience","solid","label","subject","context","store","session","findTypeURIs","n","statementsMatching","undefined","length","render","myDocument","dom","kb","div","createElement","setAttribute","sts","sz","rdf","Serializer","suggestNamespaces","namespaces","setBase","uri","str","statementsToN3","pre","appendChild","createTextNode"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA,IAAMA,EAAE,GAAGC,OAAO,CAAC,UAAD,CAAlB;;AACA,IAAMC,EAAE,GAAGF,EAAE,CAACE,EAAd;AAEAC,MAAM,CAACC,OAAP,GAAiB;AACfC,EAAAA,IAAI,EAAEL,EAAE,CAACM,KAAH,CAASC,gBAAT,GAA4B,oBADnB;AAGfC,EAAAA,IAAI,EAAE,IAHS;AAKfC,EAAAA,QAAQ,EAAE,CAACP,EAAE,CAACQ,KAAH,CAAS,WAAT,CAAD,CALK;AAOfC,EAAAA,KAAK,EAAE,eAAUC,OAAV,EAAmBC,OAAnB,EAA4B;AACjC,QAAMC,KAAK,GAAGD,OAAO,CAACE,OAAR,CAAgBD,KAA9B;;AACA,QACE,mDACAA,KAAK,CAACE,YAAN,CAAmBJ,OAAnB,CAFF,EAGE;AACA,aAAO,IAAP;AACD;;AACD,QAAMK,CAAC,GAAGH,KAAK,CAACI,kBAAN,CAAyBC,SAAzB,EAAoCA,SAApC,EAA+CA,SAA/C,EAA0DP,OAA1D,EACPQ,MADH;AAEA,QAAIH,CAAC,KAAK,CAAV,EAAa,OAAO,IAAP;AACb,WAAO,WAAWA,CAAX,GAAe,SAAtB;AACD,GAnBc;AAqBfI,EAAAA,MAAM,EAAE,gBAAUT,OAAV,EAAmBC,OAAnB,EAA4B;AAClC,QAAMS,UAAU,GAAGT,OAAO,CAACU,GAA3B;AACA,QAAMC,EAAE,GAAGX,OAAO,CAACE,OAAR,CAAgBD,KAA3B;AACA,QAAMW,GAAG,GAAGH,UAAU,CAACI,aAAX,CAAyB,KAAzB,CAAZ;AACAD,IAAAA,GAAG,CAACE,YAAJ,CAAiB,OAAjB,EAA0B,QAA1B,EAJkC,CAKlC;AACA;AACA;;AACA,QAAMC,GAAG,GAAGJ,EAAE,CAACN,kBAAH,CAAsBC,SAAtB,EAAiCA,SAAjC,EAA4CA,SAA5C,EAAuDP,OAAvD,CAAZ,CARkC,CAQ0C;;AAC5E;AACJ;AACA;AACA;AACA;AACA;AACA;;AACI,QAAMiB,EAAE,GAAG7B,EAAE,CAAC8B,GAAH,CAAOC,UAAP,CAAkBP,EAAlB,CAAX;AACAK,IAAAA,EAAE,CAACG,iBAAH,CAAqBR,EAAE,CAACS,UAAxB;AACAJ,IAAAA,EAAE,CAACK,OAAH,CAAWtB,OAAO,CAACuB,GAAnB;AACA,QAAMC,GAAG,GAAGP,EAAE,CAACQ,cAAH,CAAkBT,GAAlB,CAAZ;AACA,QAAMU,GAAG,GAAGhB,UAAU,CAACI,aAAX,CAAyB,KAAzB,CAAZ;AACAY,IAAAA,GAAG,CAACC,WAAJ,CAAgBjB,UAAU,CAACkB,cAAX,CAA0BJ,GAA1B,CAAhB;AACAX,IAAAA,GAAG,CAACc,WAAJ,CAAgBD,GAAhB;AACA,WAAOb,GAAP;AACD;AA7Cc,CAAjB","sourcesContent":["/*      Notation3 content Pane\n **\n **  This pane shows the content of a particular RDF resource\n ** or at least the RDF semantics we attribute to that resource,\n ** in generated N3 syntax.\n */\nconst UI = require('solid-ui')\nconst ns = UI.ns\n\nmodule.exports = {\n  icon: UI.icons.originalIconBase + 'w3c/n3_smaller.png',\n\n  name: 'n3',\n\n  audience: [ns.solid('Developer')],\n\n  label: function (subject, context) {\n    const store = context.session.store\n    if (\n      'http://www.w3.org/2007/ont/link#ProtocolEvent' in\n      store.findTypeURIs(subject)\n    ) {\n      return null\n    }\n    const n = store.statementsMatching(undefined, undefined, undefined, subject)\n      .length\n    if (n === 0) return null\n    return 'Data (' + n + ') as N3'\n  },\n\n  render: function (subject, context) {\n    const myDocument = context.dom\n    const kb = context.session.store\n    const div = myDocument.createElement('div')\n    div.setAttribute('class', 'n3Pane')\n    // Because of smushing etc, this will not be a copy of the original source\n    // We could instead either fetch and re-parse the source,\n    // or we could keep all the pre-smushed triples.\n    const sts = kb.statementsMatching(undefined, undefined, undefined, subject) // @@ slow with current store!\n    /*\n    var kludge = kb.formula([]) // No features\n    for (var i=0; i< sts.length; i++) {\n        s = sts[i]\n        kludge.add(s.subject, s.predicate, s.object)\n    }\n    */\n    const sz = UI.rdf.Serializer(kb)\n    sz.suggestNamespaces(kb.namespaces)\n    sz.setBase(subject.uri)\n    const str = sz.statementsToN3(sts)\n    const pre = myDocument.createElement('PRE')\n    pre.appendChild(myDocument.createTextNode(str))\n    div.appendChild(pre)\n    return div\n  }\n}\n"],"file":"n3Pane.js"}