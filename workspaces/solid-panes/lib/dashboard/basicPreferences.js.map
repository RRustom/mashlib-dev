{"version":3,"sources":["../../src/dashboard/basicPreferences.ts"],"names":["basicPreferencesPane","icon","icons","iconBase","name","label","_subject","render","subject","context","dom","store","session","complainIfBad","ok","mess","container","appendChild","widgets","errorMessageBlock","createElement","formArea","setupUserTypesSection","loadData","doc","turtle","holds","undefined","parse","uri","preferencesForm","sym","preferencesFormText","ontologyExtra","ontologyData","doRender","authn","logInLoadPreferences","div","renderContext","preferencesFile","console","log","preferencesFileError","appendedForm","appendForm","me","style","borderStyle","trustedApplicationsView","paneRegistry","byName","addDeleteSection","formContainer","createSection","description","innerText","userTypesLink","href","profile","section","podServerNodes","each","ns","space","podServers","map","node","value","list","forEach","server","generateDeletionLink","deletionLink","listItem","podServer","link","textContent","getDeletionUrlForServer","deletionUrl","singleUserUrl","URL","multiUserUrl","pathname","hostnameParts","hostname","split","slice","join","fetch","method","multiUserNssResponse","singleUserNssResponse","title","border","borderRadius","padding","marginTop","titleElement"],"mappings":"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","sourcesContent":["import { authn, icons, ns, widgets } from 'solid-ui'\nimport { IndexedFormula, NamedNode, parse, Store } from 'rdflib'\n\nimport preferencesFormText from './preferencesFormText.ttl'\nimport ontologyData from './ontologyData.ttl'\nimport { PaneDefinition } from 'pane-registry'\n\nexport const basicPreferencesPane: PaneDefinition = {\n  icon: icons.iconBase + 'noun_Sliders_341315_000000.svg',\n  name: 'basicPreferences',\n  label: _subject => {\n    return null\n  },\n\n  // Render the pane\n  // The subject should be the logged in user.\n  render: (subject, context) => {\n    const dom = context.dom\n    const store = context.session.store as Store\n\n    function complainIfBad (ok: Boolean, mess: any) {\n      if (ok) return\n      container.appendChild(widgets.errorMessageBlock(dom, mess, '#fee'))\n    }\n\n    const container = dom.createElement('div')\n\n    const formArea = setupUserTypesSection(container, dom)\n\n    function loadData (doc: NamedNode, turtle: String) {\n      doc = doc.doc() // remove # from URI if nec\n      if (!store.holds(undefined, undefined, undefined, doc)) {\n        // If not loaded already\n        ;(parse as any)(turtle, store, doc.uri, 'text/turtle', null) // Load form directly\n      }\n    }\n\n    const preferencesForm = store.sym(\n      'urn:uuid:93774ba1-d3b6-41f2-85b6-4ae27ffd2597#this'\n    )\n    loadData(preferencesForm, preferencesFormText)\n\n    const ontologyExtra = store.sym(\n      'urn:uuid:93774ba1-d3b6-41f2-85b6-4ae27ffd2597-ONT'\n    )\n    loadData(ontologyExtra, ontologyData)\n\n    async function doRender () {\n      const renderContext = await authn.logInLoadPreferences({\n        dom,\n        div: container\n      })\n      if (!renderContext.preferencesFile) {\n        // Could be CORS\n        console.log(\n          'Not doing private class preferences as no access to preferences file. ' +\n          renderContext.preferencesFileError\n        )\n        return\n      }\n      const appendedForm = widgets.appendForm(\n        dom,\n        formArea,\n        {},\n        renderContext.me,\n        preferencesForm,\n        renderContext.preferencesFile,\n        complainIfBad\n      )\n      appendedForm.style.borderStyle = 'none'\n\n      const trustedApplicationsView = context.session.paneRegistry.byName('trustedApplications')\n      if (trustedApplicationsView) {\n        container.appendChild(trustedApplicationsView.render(null, context))\n      }\n\n      // @@ TODO Remove need for casting as any and bang (!) syntax\n      addDeleteSection(container, store, renderContext.me!, dom)\n    }\n\n    doRender()\n\n    return container\n  }\n}\n\nfunction setupUserTypesSection (\n  container: Element,\n  dom: HTMLDocument\n): Element {\n  const formContainer = createSection(container, dom, 'User types')\n\n  const description = formContainer.appendChild(dom.createElement('p'))\n  description.innerText = 'Here you can self-assign user types to help the data browser know which views you would like to access.'\n\n  const userTypesLink = formContainer.appendChild(dom.createElement('a'))\n  userTypesLink.href = 'https://github.com/solid/userguide/#role'\n  userTypesLink.innerText = 'Read more'\n\n  const formArea = formContainer.appendChild(dom.createElement('div'))\n\n  return formArea\n}\n\nexport default basicPreferencesPane\n\n// ends\n\nfunction addDeleteSection (\n  container: HTMLElement,\n  store: IndexedFormula,\n  profile: NamedNode,\n  dom: HTMLDocument\n): void {\n  const section = createSection(container, dom, 'Delete account')\n\n  const podServerNodes = store.each(profile, ns.space('storage'), null, profile.doc())\n  const podServers = podServerNodes.map(node => node.value)\n\n  const list = section.appendChild(dom.createElement('ul'))\n\n  podServers.forEach(async server => {\n    const deletionLink = await generateDeletionLink(server, dom)\n    if (deletionLink) {\n      const listItem = list.appendChild(dom.createElement('li'))\n      listItem.appendChild(deletionLink)\n    }\n  })\n}\n\nasync function generateDeletionLink (\n  podServer: string,\n  dom: HTMLDocument\n): Promise<HTMLElement | null> {\n  const link = dom.createElement('a')\n  link.textContent = `Delete your account at ${podServer}`\n  const deletionUrl = await getDeletionUrlForServer(podServer)\n  if (typeof deletionUrl !== 'string') {\n    return null\n  }\n  link.href = deletionUrl\n  return link\n}\n\n/**\n * Hacky way to get the deletion link to a Pod\n *\n * This function infers the deletion link by assuming the URL structure of Node Solid server.\n * In the future, Solid will hopefully provide a standardised way of discovering the deletion link:\n * https://github.com/solid/data-interoperability-panel/issues/18\n *\n * If NSS is in multi-user mode (the case on inrupt.net and solid.community), the deletion URL for\n * vincent.dev.inrupt.net would be at dev.inrupt.net/account/delete. In single-user mode, the\n * deletion URL would be at vincent.dev.inrupt.net/account/delete.\n *\n * @param server Pod server containing the user's account.\n * @returns URL of the page that Node Solid Server would offer to delete the account, or null if\n *          the URLs we tried give invalid responses.\n */\nasync function getDeletionUrlForServer (\n  server: string\n): Promise<string | null> {\n  const singleUserUrl = new URL(server)\n  const multiUserUrl = new URL(server)\n  multiUserUrl.pathname = singleUserUrl.pathname = '/account/delete'\n\n  const hostnameParts = multiUserUrl.hostname.split('.')\n  // Remove `vincent.` from `vincent.dev.inrupt.net`, for example:\n  multiUserUrl.hostname = hostnameParts.slice(1).join('.')\n\n  const multiUserNssResponse = await fetch(multiUserUrl.href, {\n    method: 'HEAD'\n  })\n  if (multiUserNssResponse.ok) {\n    return multiUserUrl.href\n  }\n\n  const singleUserNssResponse = await fetch(singleUserUrl.href, {\n    method: 'HEAD'\n  })\n  if (singleUserNssResponse.ok) {\n    return singleUserUrl.href\n  }\n  return null\n}\n\nfunction createSection (\n  container: Element,\n  dom: HTMLDocument,\n  title: string\n): Element {\n  const section = container.appendChild(dom.createElement('div'))\n  section.style.border = '0.3em solid #418d99'\n  section.style.borderRadius = '0.5em'\n  section.style.padding = '0.7em'\n  section.style.marginTop = '0.7em'\n\n  const titleElement = section.appendChild(dom.createElement('h3'))\n  titleElement.innerText = title\n\n  return section\n}\n"],"file":"basicPreferences.js"}