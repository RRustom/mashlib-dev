{"version":3,"sources":["../../src/trustedApplications/trustedApplications.dom.ts"],"names":["createApplicationTable","subject","applicationsTable","createElement","header","createContainer","createText","appendChild","store","each","ns","acl","undefined","flatMap","app","map","origin","appModes","sort","a","b","value","forEach","createApplicationEntry","updateTable","parentElement","replaceChild","trustedApplicationState","formElements","modes","placeholder","element","submit","addOrEditApplication","createModesInput","style","click","removeApplication","event","preventDefault","err","alert","filter","checkbox","checked","deletions","additions","updater","Error","update","handleUpdateResponse","uri","success","errorBody","console","error","elementName","attributes","eventListeners","onCreated","document","Object","keys","attName","setAttribute","eventName","addEventListener","children","child","textContent","mode","isChecked","some","appMode","type","push"],"mappings":"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","sourcesContent":["import { NamedNode, Statement, sym } from 'rdflib'\nimport { ns, store } from 'solid-ui'\nimport { generateRandomString, getStatementsToAdd, getStatementsToDelete } from './trustedApplications.utils'\n\ninterface FormElements {\n  modes: HTMLInputElement[]\n  // This appears to be used to store either a node from the store,\n  // or a reference to the input (checkbox) element for a particular mode.\n  // These typings were created post-hoc, so I'm not sure if that was intentional.\n  // Thus, this union type should be considered as descriptive rather than prescriptive.\n  origin: undefined | NamedNode | HTMLInputElement\n}\n\nexport function createApplicationTable (subject: NamedNode) {\n  const applicationsTable = createElement('table', {\n    class: 'results'\n  })\n\n  // creating headers\n  const header = createContainer('tr', [\n    createText('th', 'Application URL'),\n    createText('th', 'Access modes'),\n    createText('th', 'Actions')\n  ])\n  applicationsTable.appendChild(header);\n\n  // creating rows\n  (store.each(subject, ns.acl('trustedApp'), undefined, undefined) as unknown as Statement[])\n    .flatMap(app => store\n      .each(app as any, ns.acl('origin'), undefined, undefined)\n      .map(origin => ({\n        appModes: store.each(app as any, ns.acl('mode'), undefined, undefined) as NamedNode[],\n        origin: origin as NamedNode\n      })))\n    .sort((a: any, b: any) => (a.origin.value < b.origin.value ? -1 : 1))\n    .forEach(\n      ({ appModes, origin }: { appModes: NamedNode[]; origin: NamedNode }) =>\n        applicationsTable.appendChild(\n          createApplicationEntry(subject, origin, appModes, updateTable)\n        )\n    )\n\n  // adding a row for new applications\n  applicationsTable.appendChild(\n    createApplicationEntry(subject, null, [ns.acl('Read')], updateTable)\n  )\n\n  return applicationsTable\n\n  function updateTable () {\n    applicationsTable.parentElement!.replaceChild(\n      createApplicationTable(subject),\n      applicationsTable\n    )\n  }\n}\n\nfunction createApplicationEntry (\n  subject: NamedNode,\n  origin: NamedNode | null,\n  appModes: NamedNode[],\n  updateTable: () => void\n): HTMLTableRowElement {\n  const trustedApplicationState = {\n    origin,\n    appModes,\n    formElements: {\n      modes: [],\n      origin: undefined\n    } as FormElements\n  }\n  return createContainer('tr', [\n    createContainer('td', [\n      createContainer(\n        'form',\n        [\n          createElement(\n            'input',\n            {\n              class: 'textinput',\n              placeholder: 'Write new URL here',\n              value: origin ? origin.value : ''\n            },\n            {},\n            element => {\n              trustedApplicationState.formElements.origin = element\n            }\n          )\n        ],\n        {},\n        {\n          submit: addOrEditApplication\n        }\n      )\n    ]),\n    createContainer('td', [\n      createContainer(\n        'form',\n        createModesInput(trustedApplicationState),\n        {},\n        {\n          submit: addOrEditApplication\n        }\n      )\n    ]),\n    createContainer('td', [\n      createContainer(\n        'form',\n        origin\n          ? [\n              createText('button', 'Update', {\n                class: 'controlButton',\n                style: 'background: LightGreen;'\n              }),\n              createText(\n                'button',\n                'Delete',\n                {\n                  class: 'controlButton',\n                  style: 'background: LightCoral;'\n                },\n                {\n                  click: removeApplication\n                }\n              )\n            ]\n          : [\n              createText('button', 'Add', {\n                class: 'controlButton',\n                style: 'background: LightGreen;'\n              })\n            ],\n        {},\n        {\n          submit: addOrEditApplication\n        }\n      )\n    ])\n  ])\n\n  function addOrEditApplication (event: Event) {\n    event.preventDefault()\n    let origin\n    try {\n      origin = sym(trustedApplicationState.formElements.origin!.value)\n    } catch (err) {\n      return alert('Please provide an application URL you want to trust')\n    }\n\n    const modes = trustedApplicationState.formElements.modes\n      .filter(checkbox => checkbox.checked)\n      .map(checkbox => checkbox.value)\n\n    const deletions = getStatementsToDelete(\n      trustedApplicationState.origin || origin,\n      subject,\n      store,\n      ns\n    )\n    const additions = getStatementsToAdd(\n      origin,\n      generateRandomString(),\n      modes,\n      subject,\n      ns\n    )\n    if (!store.updater) {\n      throw new Error('Store has no updater')\n    }\n    store.updater.update(deletions, additions, handleUpdateResponse)\n  }\n\n  function removeApplication (event: Event) {\n    event.preventDefault()\n    let origin\n    try {\n      origin = sym(trustedApplicationState.formElements.origin!.value)\n    } catch (err) {\n      return alert(\n        'Please provide an application URL you want to remove trust from'\n      )\n    }\n\n    const deletions = getStatementsToDelete(origin, subject, store, ns)\n    if (!store.updater) {\n      throw new Error('Store has no updater')\n    }\n    store.updater.update(deletions, [], handleUpdateResponse)\n  }\n\n  function handleUpdateResponse (uri: any, success: boolean, errorBody: any) {\n    if (success) {\n      return updateTable()\n    }\n    console.error(uri, errorBody)\n  }\n}\n\nfunction createElement<K extends keyof HTMLElementTagNameMap> (\n  elementName: K,\n  attributes: { [name: string]: string } = {},\n  eventListeners: { [eventName: string]: EventListener } = {},\n  onCreated: null | ((createdElement: HTMLElementTagNameMap[K]) => void) = null\n) {\n  const element = document.createElement(elementName)\n  if (onCreated) {\n    onCreated(element)\n  }\n  Object.keys(attributes).forEach(attName => {\n    element.setAttribute(attName, attributes[attName])\n  })\n  Object.keys(eventListeners).forEach(eventName => {\n    element.addEventListener(eventName, eventListeners[eventName])\n  })\n  return element\n}\n\nexport function createContainer<K extends keyof HTMLElementTagNameMap> (\n  elementName: K,\n  children: HTMLElement[],\n  attributes = {},\n  eventListeners = {},\n  onCreated = null\n) {\n  const element = createElement(\n    elementName,\n    attributes,\n    eventListeners,\n    onCreated\n  )\n  children.forEach(child => element.appendChild(child))\n  return element\n}\n\nexport function createText<K extends keyof HTMLElementTagNameMap> (\n  elementName: K,\n  textContent: string | null,\n  attributes = {},\n  eventListeners = {},\n  onCreated = null\n) {\n  const element = createElement(\n    elementName,\n    attributes,\n    eventListeners,\n    onCreated\n  )\n  element.textContent = textContent\n  return element\n}\n\nfunction createModesInput ({ appModes, formElements }: {\n  appModes: NamedNode[]\n  formElements: FormElements\n}) {\n  return ['Read', 'Write', 'Append', 'Control'].map(mode => {\n    const isChecked = appModes.some(\n      appMode => appMode.value === ns.acl(mode).value\n    )\n    return createContainer('label', [\n      createElement(\n        'input',\n        {\n          type: 'checkbox',\n          ...(isChecked ? { checked: '' } : {}),\n          value: ns.acl(mode).uri\n        },\n        {},\n        element => formElements.modes.push(element)\n      ),\n      createText('span', mode)\n    ])\n  })\n}\n"],"file":"trustedApplications.dom.js"}